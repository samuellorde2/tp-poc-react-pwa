{"version":3,"sources":["components/header/HeaderWifiIcon.js","utils/geolocation.js","api/db.js","components/orders/hooks.js","context/SnackBarProvider.js","components/orders/ImageList.js","components/orders/VideoList.js","components/orders/TaskList.js","components/orders/OrderDetail.js","components/orders/OrderList.js","components/orders/OrderIndex.js","api/web.js","components/home/Home.js","App.js","index.js","utils/constants.js","components/header/Header.js","components/header/HeaderDrawer.js"],"names":["HeaderWifiIcon","useState","isOnline","setIsOnline","useEffect","window","addEventListener","checkInternet","navigator","onLine","fetch","serverUrl","method","mode","then","resp","ok","type","catch","e","convertDMSToDD","degrees","minutes","seconds","direction","dd","getGeolocationFromImage","imageFile","Promise","resolve","reject","EXIF","allMetaData","this","console","log","tags","GPSLatitude","GPSLatitudeRef","GPSLongitude","GPSLongitudeRef","latDegree","latMinute","latSecond","latDirection","lonDegree","lonMinute","lonSecond","lonDirection","lat","lng","origin","parseGeolocationTags","getGeoloacationFromDevice","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","timeout","shortid","PouchDB","plugin","PouchFindPlugin","on","dbName","syncMetadataStore","ordersStore","imagesStore","videosStore","tasksStore","DEFAULT_SYNC_METADATA","_id","downloadDisabled","downloadedAt","uploadDisabled","uploadedAt","deleteDisabled","deletedAt","getSyncMetadataStore","a","forceNew","getOrdersStore","createIndex","index","fields","getTasksStore","getImagesStore","getVideosStore","cleanDatabases","cleanDatabase","metadataResult","orderResult","taskResult","imagesResult","videosResult","metadata","orders","tasks","images","video","getStoreFn","store","destroy","result","syncToRemote","syncStoreToRemote","remoteName","getLocalStoreFn","remoteDB","info","localStore","replicate","to","error","getSyncMetadata","db","get","name","updateSyncMetadata","data","previous","doc","_rev","put","getOrders","find","selector","createdAt","$gte","sort","docs","getOrderById","id","addOrder","order","getTasksByOrderId","orderId","response","ids","map","allDocs","keys","include_docs","rows","row","getTaskById","addTask","task","Date","toISOString","completed","updateTask","deleteTask","remove","getImagesByOrderId","attachments","binary","getImageById","addImage","location","_attachments","file","content_type","deleteImage","image","getVideosByOrderId","getVideoById","addVideo","deleteVideo","SnackBarContext","createContext","SnackBarProvider","children","severity","setSeverity","message","setMessage","open","setOpen","addAlert","alert","handleClose","event","reason","value","showInfoAlert","showSuccessAlert","showWarningAlert","showErrorAlert","Provider","Snackbar","autoHideDuration","onClose","Alert","elevation","variant","useStyles","makeStyles","theme","inputFile","display","icon","color","backdrop","zIndex","drawer","backdropContent","maxWidth","maxHeight","ImageList","classes","useContext","initialValue","isError","setIsError","isLoading","setIsLoading","setData","shouldReload","setShouldReload","loadData","now","valueOf","useGetImagesByOrderId","reload","selectedImage","setSelectedImage","handleOpenImage","onChangeImageUpload","element","document","getElementById","files","handleDeleteImage","Backdrop","className","onClick","src","alt","Grid","item","container","xs","justify","accept","onChange","htmlFor","IconButton","component","Paper","GridList","cellHeight","cols","GridListTile","key","style","height","ListSubheader","backgroundColor","length","imageURL","URL","createObjectURL","GridListTileBar","title","subtitle","actionIcon","VideoList","useGetVideosByOrderId","videos","selectedVideo","setSelectedVideo","handleOpenVideo","onChangeVideoUpload","handleDeleteVideo","controls","videoURL","TaskList","useGetTasksByOrderId","newTaskDescription","setNewTaskDescription","handleAddTask","description","handleCompleteTask","target","checked","handleDeleteTask","Dialog","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","label","DialogActions","Button","List","subheader","ListItem","Switch","edge","ListItemText","primary","ListItemSecondaryAction","OrderDetail","useParams","useGetOrderById","Typography","spacing","OrderList","url","useRouteMatch","useGetOrders","button","Link","secondary","station","OrderRouter","path","exact","fetchOrders","json","fetchTasksByOrderId","Home","syncMetadata","setSyncMetadata","loading","setLoading","fetchSyncMetadata","onClickDownload","all","ordersSavedToDb","orderIds","flat","updatedMetadata","onClickUpload","onClickDelete","startIcon","disabled","alignItems","CircularProgress","size","marginTop","main","paddingTop","App","basename","CssBaseline","Header","Container","ReactDOM","render","AddToHomeScreen","brandName","root","flexGrow","menuButton","marginRight","iOS","process","browser","test","userAgent","toggleDrawer","anchor","onOpen","disableBackdropTransition","disableDiscovery","aria-label","ListItemLink","props","renderLink","React","useMemo","forwardRef","itemProps","ref","width","HeaderDrawer"],"mappings":"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","file":"static/js/main.94e8926f.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport {serverUrl} from '../../utils/constants';\nexport const HeaderWifiIcon = () => {\n    const [isOnline, setIsOnline] = useState();\n\n    useEffect(() => {\n        window.addEventListener('online', checkInternet);\n        window.addEventListener('offline', checkInternet);\n        checkInternet();\n    },[])\n\n    const checkInternet = () => {\n        if (navigator.onLine) {\n            fetch(`${serverUrl}/orders`, {method: 'HEAD', mode: 'no-cors'}).then(function (resp) {\n                setIsOnline(resp && (resp.ok || resp.type === 'opaque') ? true : false)\n            }).catch(e => {\n                setIsOnline(false)\n            });\n        } else {\n            // handle offline status\n            setIsOnline(false)\n        }\n    }\n    return isOnline ? <WifiIcon/> : <WifiOffIcon/>\n}\n","import * as EXIF from 'exif-js';\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n  let dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction === 'S' || direction === 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nfunction parseGeolocationTags(tags) {\n  const {\n    GPSLatitude,\n    GPSLatitudeRef,\n    GPSLongitude,\n    GPSLongitudeRef,\n  } = tags;\n\n  if (\n    !GPSLatitude ||\n    !GPSLatitudeRef ||\n    !GPSLongitude ||\n    !GPSLongitudeRef\n  ) {\n    return null;\n  }\n\n  const latDegree = GPSLatitude[0];\n  const latMinute = GPSLatitude[1];\n  const latSecond = GPSLatitude[2];\n  const latDirection = GPSLatitudeRef;\n\n  const lonDegree = GPSLongitude[0];\n  const lonMinute = GPSLongitude[1];\n  const lonSecond = GPSLongitude[2];\n  const lonDirection = GPSLongitudeRef;\n\n  const lat = convertDMSToDD(\n    latDegree,\n    latMinute,\n    latSecond,\n    latDirection,\n  );\n\n  const lng = convertDMSToDD(\n    lonDegree,\n    lonMinute,\n    lonSecond,\n    lonDirection,\n  );\n\n  return {\n    lat,\n    lng,\n    origin: 'EXIF',\n  };\n}\n\nexport const getGeolocationFromImage = (imageFile) => {\n  return new Promise((resolve, reject) => {\n    EXIF.getData(imageFile, function () {\n      const allMetaData = EXIF.getAllTags(this);\n      console.log('==>> EXIF ALL', allMetaData);\n      resolve(parseGeolocationTags(allMetaData));\n    });\n  });\n};\n\nexport const getGeoloacationFromDevice = () => {\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        // success\n        (position) => {\n          console.log(position);\n          resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            origin: 'DEVICE',\n          });\n        },\n        // error\n        (err) => {\n          // reject(err);\n          resolve(null);\n          // error.code can be:\n          //   0: unknown error\n          //   1: permission denied\n          //   2: position unavailable (error response from location provider)\n          //   3: timed out\n        },\n        // options\n        {\n          timeout: 10000,\n          // enableHighAccuracy: true, // slower to resolve and uses more battery\n        },\n      );\n    } else {\n      console.log(\n        'Geolocation is not supported for this Browser/OS.',\n      );\n      reject();\n    }\n  });\n};\n","import PouchDB from 'pouchdb';\nimport PouchFindPlugin from 'pouchdb-find';\nimport * as shortid from 'shortid';\nimport {\n  getGeolocationFromImage,\n  getGeoloacationFromDevice,\n} from '../utils/geolocation';\n\nshortid.characters(\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@',\n);\n\n// enable queries\n// https://pouchdb.com/guides/mango-queries.html\nPouchDB.plugin(PouchFindPlugin);\n\nPouchDB.on('destroyed', function (dbName) {\n  // called whenever a db is destroyed.\n  console.log('==>> POUCHEDB destroyed', dbName);\n});\n\nconst SYNC_METADATA = 'sync-metadata';\nconst ORDERS = 'orders';\nconst TASKS = 'tasks';\nconst IMAGES = 'images';\nconst VIDEOS = 'videos';\n\nexport const DEFAULT_SYNC_METADATA = {\n  _id: 'default',\n  downloadDisabled: false,\n  downloadedAt: '',\n  uploadDisabled: true,\n  uploadedAt: '',\n  deleteDisabled: true,\n  deletedAt: '',\n};\n\n// ####################################\n// DATABASES\n// ####################################\n\nlet syncMetadataStore;\nlet ordersStore;\nlet imagesStore;\nlet videosStore;\nlet tasksStore;\n\nasync function getSyncMetadataStore(forceNew = false) {\n  if (!syncMetadataStore || forceNew) {\n    syncMetadataStore = new PouchDB(SYNC_METADATA);\n  }\n  return syncMetadataStore;\n}\n\nasync function getOrdersStore(forceNew = false) {\n  if (!ordersStore || forceNew) {\n    ordersStore = new PouchDB(ORDERS);\n\n    await ordersStore.createIndex({\n      index: { fields: ['createdAt'] },\n    });\n  }\n  return ordersStore;\n}\n\nasync function getTasksStore(forceNew = false) {\n  if (!tasksStore || forceNew) {\n    tasksStore = new PouchDB(TASKS);\n\n    await tasksStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return tasksStore;\n}\n\nasync function getImagesStore(forceNew = false) {\n  if (!imagesStore || forceNew) {\n    imagesStore = new PouchDB(IMAGES);\n\n    await imagesStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return imagesStore;\n}\n\nasync function getVideosStore(forceNew = false) {\n  if (!videosStore || forceNew) {\n    videosStore = new PouchDB(VIDEOS);\n\n    await videosStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return videosStore;\n}\n\nexport async function cleanDatabases() {\n  const metadataResult = await cleanDatabase(getSyncMetadataStore);\n  const orderResult = await cleanDatabase(getOrdersStore);\n  const taskResult = await cleanDatabase(getTasksStore);\n  const imagesResult = await cleanDatabase(getImagesStore);\n  const videosResult = await cleanDatabase(getVideosStore);\n\n  return {\n    metadata: metadataResult.ok,\n    orders: orderResult.ok,\n    tasks: taskResult.ok,\n    images: imagesResult.ok,\n    video: videosResult.ok,\n  };\n}\n\nasync function cleanDatabase(getStoreFn) {\n  // delete the store\n  const store = await getStoreFn();\n  const result = await store.destroy();\n  if (result.ok) {\n    // re-create\n    await getStoreFn(true);\n  }\n  return result;\n}\n\n// ####################################\n// SYNC LOCAL DATA TO SERVER\n// ####################################\n\nexport const syncToRemote = async () => {\n  // tasks\n  await syncStoreToRemote(TASKS, getTasksStore);\n\n  // images\n  await syncStoreToRemote(IMAGES, getImagesStore);\n\n  // videos\n  await syncStoreToRemote(VIDEOS, getVideosStore);\n\n  return Promise.resolve();\n};\n\nconst syncStoreToRemote = async (remoteName, getLocalStoreFn) => {\n  const remoteDB = new PouchDB(\n    `https://tp-poc-pouchdb-server.herokuapp.com/${remoteName}`,\n  );\n  console.log(await remoteDB.info());\n\n  const localStore = await getLocalStoreFn();\n\n  return new Promise((resolve, reject) => {\n    localStore.replicate\n      .to(remoteDB)\n      .on('complete', () => {\n        console.log(remoteName, 'SYNC COMPLETED');\n        resolve();\n      })\n      .on('error', (err) => {\n        console.log(remoteName, 'SYNC ERROR');\n        console.error(err);\n        reject(err);\n      });\n  });\n};\n\n// ####################################\n// SYNC METADATA STORE\n// ####################################\n\nexport async function getSyncMetadata() {\n  try {\n    const db = await getSyncMetadataStore();\n    return await db.get('default');\n  } catch (err) {\n    if (err && err.name === 'not_found') {\n      return DEFAULT_SYNC_METADATA;\n    }\n  }\n}\n\nexport async function updateSyncMetadata(data) {\n  const db = await getSyncMetadataStore();\n  const previous = await getSyncMetadata();\n  const doc =\n    previous && previous._rev\n      ? { ...data, _rev: previous._rev }\n      : data;\n  // update\n  await db.put(doc);\n  // return updated version\n  return await db.get('default');\n}\n\n// ####################################\n// ORDERS STORE\n// ####################################\n\nexport async function getOrders() {\n  const db = await getOrdersStore();\n  const result = await db.find({\n    selector: {\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  return result.docs;\n}\n\nexport async function getOrderById(id) {\n  const db = await getOrdersStore();\n  return await db.get(id);\n}\n\nexport async function addOrder(order) {\n  const db = await getOrdersStore();\n  // save\n  const result = await db.put(order);\n  // return the most recebt version\n  return getOrderById(result.id);\n}\n\n// ####################################\n// TASKS STORE\n// ####################################\n\nexport async function getTasksByOrderId(orderId) {\n  const db = await getTasksStore();\n  const response = await db.find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n  // get by ids\n  const result = await db.allDocs({\n    keys: ids,\n    include_docs: true,\n  });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getTaskById(id) {\n  const db = await getTasksStore();\n  return await db.get(id);\n}\n\nexport async function addTask(task) {\n  const db = await getTasksStore();\n  // save\n  const result = await db.put({\n    ...task,\n    _id: shortid.generate(),\n    createdAt: new Date().toISOString(),\n    completed: false,\n  });\n  // return saved doc\n  return getTaskById(result.id);\n}\n\nexport async function updateTask(task) {\n  const db = await getTasksStore();\n  // get task\n  const { _rev } = await getTaskById(task._id);\n  // save\n  const result = await db.put({\n    ...task,\n    _rev,\n  });\n  // return saved doc\n  return getTaskById(result.id);\n}\n\nexport async function deleteTask(task) {\n  const db = await getTasksStore();\n  // load latest rev\n  const doc = await db.get(task._id);\n  // remove\n  return db.remove(doc);\n}\n\n// ####################################\n// IMAGES STORE\n// ####################################\n\nexport async function getImagesByOrderId(orderId) {\n  const db = await getImagesStore();\n  // find does not return the attachments\n  const response = await db.find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n  // get by ids\n  const result = await db.allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getImageById(id) {\n  const db = await getImagesStore();\n  return await db.get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addImage(orderId, imageFile) {\n  const db = await getImagesStore();\n  const { name, type } = imageFile;\n  // try to retrieve location from EXIF tags\n  let location = await getGeolocationFromImage(imageFile);\n  // ask current location from device\n  if (!location) {\n    location = await getGeoloacationFromDevice();\n  }\n  // inline attachment\n  const doc = {\n    _id: shortid.generate(),\n    orderId,\n    name,\n    location,\n    createdAt: new Date().toISOString(),\n    _attachments: {\n      file: {\n        content_type: type,\n        data: imageFile,\n      },\n    },\n  };\n  // save\n  const result = await db.put(doc);\n  // return saved image\n  return getImageById(result.id);\n}\n\nexport async function deleteImage(image) {\n  const db = await getImagesStore();\n  // load latest rev\n  const doc = await db.get(image._id);\n  // remove\n  return db.remove(doc);\n}\n\n// ####################################\n// VIDEOS STORE\n// ####################################\n\nexport async function getVideosByOrderId(orderId) {\n  const db = await getVideosStore();\n  // find does not return the attachments\n  const response = await db.find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n  // get by ids\n  const result = await db.allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getVideoById(id) {\n  const db = await getVideosStore();\n  return await db.get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addVideo(orderId, imageFile) {\n  const db = await getVideosStore();\n  const { name, type } = imageFile;\n  // inline attachment\n  const doc = {\n    _id: shortid.generate(),\n    orderId,\n    name,\n    createdAt: new Date().toISOString(),\n    _attachments: {\n      file: {\n        content_type: type,\n        data: imageFile,\n      },\n    },\n  };\n  // save\n  const result = await db.put(doc);\n  // return saved image\n  return getVideoById(result.id);\n}\n\nexport async function deleteVideo(video) {\n  const db = await getVideosStore();\n  // load latest rev\n  const doc = await db.get(video._id);\n  // remove\n  return db.remove(doc);\n}\n","import { useState, useEffect } from 'react';\nimport {\n  getOrders,\n  getOrderById,\n  getImagesByOrderId,\n  getVideosByOrderId,\n  getTasksByOrderId,\n} from '../../api/db';\n\nexport const useGetOrders = (initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrders());\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetOrderById = (id, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrderById(id));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [id, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetTasksByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getTasksByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetImagesByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getImagesByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetVideosByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getVideosByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n","import React, { createContext, useState } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nexport const SnackBarContext = createContext();\n\nexport function SnackBarProvider({ children }) {\n  const [severity, setSeverity] = useState('info');\n  const [message, setMessage] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const addAlert = (alert, severity) => {\n    setMessage(alert);\n    setSeverity('success');\n    setOpen(true);\n  };\n\n  const showInfoAlert = (alert) => addAlert(alert, 'info');\n  const showSuccessAlert = (alert) => addAlert(alert, 'success');\n  const showWarningAlert = (alert) => addAlert(alert, 'warning');\n  const showErrorAlert = (alert) => addAlert(alert, 'error');\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const value = {\n    showInfoAlert,\n    showSuccessAlert,\n    showWarningAlert,\n    showErrorAlert,\n  };\n\n  return (\n    <>\n      <SnackBarContext.Provider value={value}>\n        {children}\n        <Snackbar\n          message={message}\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <Alert\n            elevation={6}\n            variant=\"filled\"\n            onClose={handleClose}\n            severity={severity}\n          >\n            {message}\n          </Alert>\n        </Snackbar>\n      </SnackBarContext.Provider>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Backdrop,\n} from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n// import LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetImagesByOrderId } from './hooks';\nimport { addImage, deleteImage } from '../../api/db';\nimport { SnackBarContext } from '../../context/SnackBarProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  backdropContent: {\n    maxWidth: '95%',\n    maxHeight: '95%',\n  },\n}));\n\nexport default function ImageList({ orderId }) {\n  const classes = useStyles();\n\n  const { showSuccessAlert, showErrorAlert } = useContext(\n    SnackBarContext,\n  );\n\n  const [images, isLoading, isError, reload] = useGetImagesByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenImage = (image) => () => {\n    // clicked image\n    setSelectedImage(image);\n    // open backdrop\n    setOpen(!open);\n  };\n\n  const onChangeImageUpload = async (event) => {\n    try {\n      const element = document.getElementById('input-image-file');\n      if (element.files && element.files[0]) {\n        await addImage(orderId, element.files[0]);\n        reload();\n        // show message\n        showSuccessAlert('Image uploaded');\n      }\n    } catch (err) {\n      showErrorAlert(`Error uploading image (${err.message})`);\n    }\n  };\n\n  const handleDeleteImage = (image) => async (event) => {\n    try {\n      // delete\n      await deleteImage(image);\n      // reload images\n      reload();\n      // show message\n      showSuccessAlert('Image removed');\n    } catch (err) {\n      showErrorAlert(`Error removing image (${err.message})`);\n    }\n  };\n\n  // const onClickMap = (data) => (event) => {\n  //   console.log('==>> onClickMap', data);\n\n  //   if (!data) {\n  //     return;\n  //   }\n\n  //   const { lat, lng } = data;\n\n  //   if (['iPhone', 'iPad', 'iPod'].includes(navigator.platform)) {\n  //     const win = window.open(\n  //       `maps://maps.google.com/maps?daddr=${lat},${lng}&amp;ll=`,\n  //       '_top',\n  //     );\n  //     return win.focus();\n  //   }\n  //   /* default to Google */\n  //   const win = window.open(\n  //     `https://maps.google.com/maps?q=${lat},${lng}`,\n  //     '_blank',\n  //   );\n  //   return win.focus();\n  // };\n\n  return (\n    <>\n      {/* BACKDROP */}\n\n      <Backdrop\n        className={classes.backdrop}\n        open={open}\n        onClick={handleClose}\n      >\n        {selectedImage && (\n          <img\n            className={classes.backdropContent}\n            src={selectedImage}\n            alt=\"\"\n          />\n        )}\n      </Backdrop>\n\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"input-image-file\"\n            className={classes.inputFile}\n            onChange={onChangeImageUpload}\n          />\n          <label htmlFor=\"input-image-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <PhotoCamera />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-image\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Images\n                {!isLoading && images.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading images)' : ''}\n              </ListSubheader>\n            </GridListTile>\n\n            {images &&\n              images.map((image) => {\n                const imageURL = URL.createObjectURL(\n                  image._attachments.file.data,\n                );\n                return (\n                  <GridListTile\n                    key={image._id}\n                    cols={1}\n                    onClick={handleOpenImage(imageURL)}\n                  >\n                    <img src={imageURL} alt={image.name} />\n                    <GridListTileBar\n                      title={image.name}\n                      subtitle={\n                        image.location\n                          ? `${image.location.lat}, ${image.location.lng}`\n                          : 'No location'\n                      }\n                      actionIcon={\n                        <IconButton\n                          className={classes.icon}\n                          onClick={handleDeleteImage(image)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                );\n              })}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Backdrop,\n} from '@material-ui/core';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetVideosByOrderId } from './hooks';\nimport { addVideo, deleteVideo } from '../../api/db';\nimport { SnackBarContext } from '../../context/SnackBarProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  backdropContent: {\n    maxWidth: '95%',\n    maxHeight: '95%',\n  },\n}));\n\nexport default function VideoList({ orderId }) {\n  const classes = useStyles();\n\n  const { showSuccessAlert, showErrorAlert } = useContext(\n    SnackBarContext,\n  );\n\n  const [videos, isLoading, isError, reload] = useGetVideosByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState('');\n\n  const handleClose = () => {\n    setSelectedVideo('');\n    setOpen(false);\n  };\n\n  const handleOpenVideo = (video) => () => {\n    // clicked video\n    setSelectedVideo(video);\n    // open backdrop\n    setOpen(!open);\n  };\n\n  const onChangeVideoUpload = async (event) => {\n    try {\n      const element = document.getElementById('input-video-file');\n      if (element.files && element.files[0]) {\n        await addVideo(orderId, element.files[0]);\n        reload();\n        // show message\n        showSuccessAlert('Video uploaded');\n      }\n    } catch (err) {\n      showErrorAlert(`Error uploading video (${err.message})`);\n    }\n  };\n\n  const handleDeleteVideo = (video) => async (event) => {\n    try {\n      // delete\n      await deleteVideo(video);\n      // reload videos\n      reload();\n      // show message\n      showSuccessAlert('Video removed');\n    } catch (err) {\n      showErrorAlert(`Error removing video (${err.message})`);\n    }\n  };\n\n  return (\n    <>\n      {/* BACKDROP */}\n\n      <Backdrop\n        className={classes.backdrop}\n        open={open}\n        onClick={handleClose}\n      >\n        {selectedVideo && (\n          <video controls className={classes.backdropContent}>\n            <source src={selectedVideo} />\n            <p>This browser does not support the video element</p>\n          </video>\n        )}\n      </Backdrop>\n\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            id=\"input-video-file\"\n            className={classes.inputFile}\n            onChange={onChangeVideoUpload}\n          />\n          <label htmlFor=\"input-video-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <VideocamIcon />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-video\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Videos\n                {!isLoading && videos.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading videos)' : ''}\n              </ListSubheader>\n            </GridListTile>\n            {videos &&\n              videos.map((video) => {\n                const videoURL = URL.createObjectURL(\n                  video._attachments.file.data,\n                );\n                return (\n                  <GridListTile\n                    key={video._id}\n                    cols={1}\n                    onClick={handleOpenVideo(videoURL)}\n                  >\n                    <video height={180} controls={false}>\n                      <source\n                        type={video._attachments.file.content_type}\n                        src={videoURL}\n                      />\n                      <p>\n                        This browser does not support the video\n                        element\n                      </p>\n                    </video>\n                    <GridListTileBar\n                      title={video.name}\n                      actionIcon={\n                        <IconButton\n                          className={classes.icon}\n                          onClick={handleDeleteVideo(video)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                );\n              })}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport {\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetTasksByOrderId } from './hooks';\nimport { updateTask, addTask, deleteTask } from '../../api/db';\nimport { SnackBarContext } from '../../context/SnackBarProvider';\n\nexport default function TaskList({ orderId }) {\n  const { showSuccessAlert, showErrorAlert } = useContext(\n    SnackBarContext,\n  );\n  const [tasks, isLoading, isError, reload] = useGetTasksByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [newTaskDescription, setNewTaskDescription] = useState(false);\n\n  const onChange = (event) => {\n    setNewTaskDescription(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAddTask = async () => {\n    try {\n      // save task\n      await addTask({\n        orderId,\n        description: newTaskDescription,\n      });\n      // close dialog\n      handleClose();\n      // reload tasks\n      reload();\n      // show message\n      showSuccessAlert('Task added');\n    } catch (err) {\n      showErrorAlert(`Error addding task (${err.message})`);\n    }\n  };\n\n  const handleCompleteTask = (task) => async (event) => {\n    try {\n      await updateTask({\n        ...task,\n        completed: event.target.checked,\n      });\n      reload();\n    } catch (err) {\n      showErrorAlert(`Error completiing task (${err.message})`);\n    }\n  };\n\n  const handleDeleteTask = (task) => async (event) => {\n    try {\n      // delete task\n      await deleteTask(task);\n      // reload tasks\n      reload();\n      // show message\n      showSuccessAlert('Task removed');\n    } catch (err) {\n      showErrorAlert(`Error removing task (${err.message})`);\n    }\n  };\n\n  return (\n    <>\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <IconButton\n            color=\"primary\"\n            component=\"span\"\n            onClick={handleClickOpen}\n          >\n            <AddIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      {/* DIALOG */}\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle style={{ backgroundColor: '#E5E5E5' }}>\n          New Task\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id=\"description\"\n            label=\"Description\"\n            fullWidth\n            onChange={onChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddTask} color=\"primary\">\n            Add Task\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <List\n            subheader={\n              <ListSubheader\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Tasks\n                {!isLoading && tasks.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading tasks)' : ''}\n              </ListSubheader>\n            }\n          >\n            {tasks &&\n              tasks.map((task) => (\n                <ListItem key={task._id}>\n                  <Switch\n                    edge=\"start\"\n                    onChange={handleCompleteTask(task)}\n                    checked={task.completed}\n                  />\n                  <ListItemText primary={task.description} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={handleDeleteTask(task)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n          </List>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { useGetOrderById } from './hooks';\nimport ImageList from './ImageList';\nimport VideoList from './VideoList';\nimport TaskList from './TaskList';\n\nexport default function OrderDetail() {\n  let { id } = useParams();\n\n  // states\n  const [order, isLoading, isError] = useGetOrderById(id);\n\n  return (\n    <div>\n      {isError && <div>Something went wrong ...</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && !order && (\n        <Typography variant=\"subtitle1\">Order not found</Typography>\n      )}\n      {order && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{order.description}</Typography>\n          </Grid>\n          <TaskList orderId={id} />\n          <ImageList orderId={id} />\n          <VideoList orderId={id} />\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useGetOrders } from './hooks';\n\nexport default function OrderList() {\n  const { url } = useRouteMatch();\n  const [orders, isLoading, isError] = useGetOrders([]);\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Work Orders</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading && <div>Loading...</div>}\n          {!isLoading && orders.length === 0 && (\n            <Typography variant=\"subtitle1\">\n              No orders to display\n            </Typography>\n          )}\n          {orders.length > 0 && (\n            <Paper elevation={1}>\n              <List>\n                {orders.map((order) => (\n                  <ListItem\n                    key={order._id}\n                    button\n                    component={Link}\n                    to={`${url}/${order._id}`}\n                  >\n                    <ListItemText\n                      primary={order.description}\n                      secondary={order.station}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton color=\"inherit\">\n                        <VisibilityIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useRouteMatch, Route, Switch } from 'react-router-dom';\nimport OrderDetail from './OrderDetail';\nimport OrderList from './OrderList';\n\nexport default function OrderRouter() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <OrderList />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetail />\n      </Route>\n    </Switch>\n  );\n}\n","// web fetch\nimport {serverUrl} from '../utils/constants';\n\nexport async function fetchOrders() {\n    const response = await fetch(\n        `${serverUrl}/orders`,\n    );\n    return response.json();\n}\n\nexport async function fetchOrderById(id) {\n    const response = await fetch(\n        `${serverUrl}/orders/${id}`,\n    );\n    return response.json();\n}\n\nexport async function fetchTasksByOrderId(orderId) {\n    const response = await fetch(\n        `${serverUrl}/tasks/${orderId}`,\n    );\n    return response.json();\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Grid,\n  Typography,\n  Button,\n  CircularProgress,\n  Paper,\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchOrders, fetchTasksByOrderId } from '../../api/web';\nimport {\n  addOrder,\n  getSyncMetadata,\n  DEFAULT_SYNC_METADATA,\n  updateSyncMetadata,\n  cleanDatabases,\n  addTask,\n  syncToRemote,\n} from '../../api/db';\nimport { SnackBarContext } from '../../context/SnackBarProvider';\n\nexport default function Home() {\n  const { showSuccessAlert, showErrorAlert } = useContext(\n    SnackBarContext,\n  );\n\n  // load sync metadata\n  const [syncMetadata, setSyncMetadata] = useState(\n    DEFAULT_SYNC_METADATA,\n  );\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchSyncMetadata() {\n      try {\n        const response = await getSyncMetadata();\n        setSyncMetadata(response);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchSyncMetadata();\n  }, []);\n\n  const onClickDownload = async (event) => {\n    try {\n      setLoading(true);\n\n      // fetch data from web api\n      const orders = await fetchOrders();\n\n      if (orders.length > 0) {\n        const ordersSavedToDb = await Promise.all(\n          orders.map((order) =>\n            // pouchdb needs an _id as key\n            addOrder({ ...order, _id: order.id }),\n          ),\n        );\n\n        const orderIds = ordersSavedToDb.map((order) => order._id);\n\n        const tasks = await Promise.all(\n          orderIds.map((orderId) => fetchTasksByOrderId(orderId)),\n        );\n\n        // pouchdb needs an _id as key\n        await Promise.all(\n          tasks\n            .flat()\n            .map((task) => addTask({ ...task, _id: addTask.id })),\n        );\n\n        // save metadata in the database\n        const updatedMetadata = await updateSyncMetadata({\n          ...syncMetadata,\n          downloadDisabled: true,\n          uploadDisabled: false,\n          deleteDisabled: false,\n        });\n\n        // update sync metadata state\n        setSyncMetadata(updatedMetadata);\n      }\n\n      showSuccessAlert('Data loaded from server successfuly');\n    } catch (err) {\n      showErrorAlert('Error loading data from server');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onClickUpload = async (event) => {\n    try {\n      setLoading(true);\n\n      await syncToRemote();\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: true,\n        uploadDisabled: true,\n        deleteDisabled: false,\n      });\n\n      // // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      showSuccessAlert('Data synced back to server successfuly');\n    } catch (err) {\n      showErrorAlert('Error syncing data back to server');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onClickDelete = async (event) => {\n    try {\n      setLoading(true);\n\n      // delete databases\n      const result = await cleanDatabases();\n      console.log(result);\n\n      // restore sync metadata default\n      setSyncMetadata(await getSyncMetadata());\n\n      showSuccessAlert('Local database cleaned successfuly');\n    } catch (err) {\n      showErrorAlert('Error cleaning local database');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Home</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<CloudDownloadIcon />}\n            onClick={onClickDownload}\n            disabled={syncMetadata.downloadDisabled || loading}\n          >\n            Load data from server\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<CloudUploadIcon />}\n            onClick={onClickUpload}\n            disabled={syncMetadata.uploadDisabled || loading}\n          >\n            Sync local data to server\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={syncMetadata.deleteDisabled || loading}\n          >\n            Clean my local data\n          </Button>\n        </Grid>\n        {loading && (\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress size={40} style={{ marginTop: 50 }} />\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Header from './components/header/Header';\nimport OrderIndex from './components/orders/OrderIndex';\nimport Home from './components/home/Home';\nimport { SnackBarProvider } from './context/SnackBarProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   padding: theme.spacing(2),\n    // },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/\">\n      <CssBaseline />\n      <SnackBarProvider>\n        <Header />\n        <Container maxWidth=\"md\">\n          <main className={classes.main}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/orders\">\n                <OrderIndex />\n              </Route>\n            </Switch>\n          </main>\n        </Container>\n      </SnackBarProvider>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport AddToHomeScreen from 'a2hs.js';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register(serviceWorkerConfig);\n\n// add to home screen\nAddToHomeScreen({\n  brandName: 'My Work',\n});\n","export const serverUrl = 'https://tp-poc-api.herokuapp.com/api';\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport HeaderDrawer from './HeaderDrawer';\nimport { HeaderWifiIcon } from './HeaderWifiIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const iOS =\n    process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open !== value) {\n      setOpen(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={open}\n          onOpen={toggleDrawer(true)}\n          onClose={toggleDrawer(false)}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          <HeaderDrawer />\n        </SwipeableDrawer>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Work App\n          </Typography>\n          <HeaderWifiIcon />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: 180,\n  },\n}));\n\nexport default function HeaderDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"/orders\"\n          primary=\"Orders\"\n          icon={<AssignmentIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n"],"sourceRoot":""}