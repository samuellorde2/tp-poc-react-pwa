{"version":3,"sources":["utils/image.js","api/db.js","components/orders/OrderDetail.js","components/orders/OrderList.js","components/orders/OrderRouter.js","api/web.js","components/home/Home.js","components/app/App.js","index.js","components/app/Header.js","components/app/AppMenu.js"],"names":["convertDMSToDD","degrees","minutes","seconds","direction","dd","getGeolocationFromImage","imageFile","Promise","resolve","reject","EXIF","allMetaData","this","console","log","tags","GPSLatitude","GPSLatitudeRef","GPSLongitude","GPSLongitudeRef","latDegree","latMinute","latSecond","latDirection","lonDegree","lonMinute","lonSecond","lonDirection","lat","lng","getGeolocation","shortid","PouchDB","plugin","PouchFindPlugin","syncMetadataStore","ordersStore","imagesStore","DEFAULT_SYNC_METADATA","_id","downloadDisabled","downloadedAt","uploadDisabled","uploadedAt","deleteDisabled","deletedAt","getSyncMetadataStore","getOrdersStore","getImagesStore","createIndex","index","fields","getSyncMetadata","a","get","name","updateSyncMetadata","data","previous","doc","_rev","put","getOrders","allDocs","include_docs","result","rows","map","row","getOrderById","id","addOrder","order","deleteAllOrders","destroy","ok","getImagesByOrderId","orderId","find","selector","response","ids","docs","keys","attachments","binary","getImageById","addImage","type","includes","location","_attachments","file","content_type","error","useStyles","makeStyles","theme","root","inputFile","display","icon","color","OrderDetail","classes","useParams","useState","isError","setIsError","isLoading","setIsLoading","setOrder","images","setImages","useEffect","fetchOrderById","fetchImagesByOrderId","handleToggle","task","event","target","checked","tasks","item","done","onChangeImageUpload","element","document","getElementById","files","Typography","variant","Grid","container","spacing","xs","description","justify","IconButton","component","Paper","elevation","List","subheader","ListSubheader","ListItem","key","ListItemText","primary","ListItemSecondaryAction","Switch","edge","onChange","accept","className","htmlFor","GridList","cellHeight","cols","GridListTile","style","height","filter","image","src","URL","createObjectURL","alt","GridListTileBar","title","subtitle","actionIcon","onClick","navigator","platform","window","open","focus","controls","OrderList","url","useRouteMatch","orders","setOrders","fetchOrders","length","button","Link","to","secondary","station","OrderRouter","path","exact","fetch","json","marginRight","Home","syncMetadata","setSyncMetadata","fetchSyncMetadata","loading","message","err","inProgress","setInProgress","onClickDownload","all","ordersWithTasks","updatedMetadata","onClickUpload","onClickDelete","Button","startIcon","disabled","CircularProgress","size","main","paddingTop","App","basename","CssBaseline","Header","Container","maxWidth","ReactDOM","render","AddToHomeScreen","brandName","flexGrow","menuButton","iOS","process","browser","test","userAgent","setOpen","toggleDrawer","value","position","anchor","onOpen","onClose","disableBackdropTransition","disableDiscovery","aria-label","ListItemLink","props","renderLink","React","useMemo","forwardRef","itemProps","ref","width","AppMenu"],"mappings":"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","file":"static/js/main.b4d3f826.chunk.js","sourcesContent":["import * as EXIF from 'exif-js';\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n  let dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction === 'S' || direction === 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nexport function getGeolocation(tags) {\n  const {\n    GPSLatitude,\n    GPSLatitudeRef,\n    GPSLongitude,\n    GPSLongitudeRef,\n  } = tags;\n\n  if (\n    !GPSLatitude ||\n    !GPSLatitudeRef ||\n    !GPSLongitude ||\n    !GPSLongitudeRef\n  ) {\n    return null;\n  }\n\n  const latDegree = GPSLatitude[0];\n  const latMinute = GPSLatitude[1];\n  const latSecond = GPSLatitude[2];\n  const latDirection = GPSLatitudeRef;\n\n  const lonDegree = GPSLongitude[0];\n  const lonMinute = GPSLongitude[1];\n  const lonSecond = GPSLongitude[2];\n  const lonDirection = GPSLongitudeRef;\n\n  const lat = convertDMSToDD(\n    latDegree,\n    latMinute,\n    latSecond,\n    latDirection,\n  );\n\n  const lng = convertDMSToDD(\n    lonDegree,\n    lonMinute,\n    lonSecond,\n    lonDirection,\n  );\n\n  return {\n    lat,\n    lng,\n  };\n}\n\nexport function getGeolocationFromImage(imageFile) {\n  return new Promise((resolve, reject) => {\n    EXIF.getData(imageFile, function () {\n      const allMetaData = EXIF.getAllTags(this);\n      console.log('==>> EXIF ALL', allMetaData);\n      resolve(getGeolocation(allMetaData));\n    });\n  });\n}\n","import PouchDB from 'pouchdb';\nimport PouchFindPlugin from 'pouchdb-find';\nimport * as shortid from 'shortid';\nimport { getGeolocationFromImage } from '../utils/image';\n\nshortid.characters(\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@',\n);\n\n// enable queries\n// https://pouchdb.com/guides/mango-queries.html\nPouchDB.plugin(PouchFindPlugin);\n\nconst SYNC_METADATA = 'sync-metadata';\nconst ORDERS = 'orders';\nconst IMAGES = 'images';\n\nexport const DEFAULT_SYNC_METADATA = {\n  _id: 'default',\n  downloadDisabled: false,\n  downloadedAt: '',\n  uploadDisabled: true,\n  uploadedAt: '',\n  deleteDisabled: true,\n  deletedAt: '',\n};\n\nlet syncMetadataStore;\nlet ordersStore;\nlet imagesStore;\n\nfunction getSyncMetadataStore() {\n  if (!syncMetadataStore) {\n    syncMetadataStore = new PouchDB(SYNC_METADATA);\n  }\n  return syncMetadataStore;\n}\n\nfunction getOrdersStore() {\n  if (!ordersStore) {\n    ordersStore = new PouchDB(ORDERS);\n  }\n  return ordersStore;\n}\n\nfunction getImagesStore() {\n  if (!imagesStore) {\n    imagesStore = new PouchDB(IMAGES);\n\n    imagesStore.createIndex({\n      index: { fields: ['orderId'] },\n    });\n  }\n  return imagesStore;\n}\n\n// ####################################\n// SYNC METADATA STORE\n// ####################################\n\nexport async function getSyncMetadata() {\n  try {\n    return await getSyncMetadataStore().get('default');\n  } catch (err) {\n    if (err && err.name === 'not_found') {\n      return DEFAULT_SYNC_METADATA;\n    }\n  }\n}\n\nexport async function updateSyncMetadata(data) {\n  const previous = await getSyncMetadata();\n  const doc =\n    previous && previous._rev\n      ? { ...data, _rev: previous._rev }\n      : data;\n\n  // update\n  await getSyncMetadataStore().put(doc);\n\n  // return updated version\n  return await getSyncMetadataStore().get('default');\n}\n\n// ####################################\n// ORDERS STORE\n// ####################################\n\nexport async function getOrders() {\n  const result = await getOrdersStore().allDocs({\n    include_docs: true,\n  });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getOrderById(id) {\n  return await getOrdersStore().get(id);\n}\n\nexport async function addOrder(order) {\n  let doc;\n  // pouch ex[ect a _id field\n  if (order.id) {\n    doc = { ...order, _id: order.id };\n  }\n  // save\n  const result = await getOrdersStore().put(doc);\n  // return the most recebt version\n  return getOrderById(result.id);\n}\n\nexport async function updateOrder(order) {\n  // load the latest rev\n  const { _rev } = await getOrdersStore().get(order._id);\n  // update\n  const result = await getOrdersStore().put({ ...order, _rev });\n  // return the most recent version\n  return getOrderById(result.id);\n}\n\nexport async function deleteOrder(order) {\n  // load latest rev\n  const doc = await getOrdersStore.get(order._id);\n  // remove\n  return getOrdersStore().remove(doc);\n}\n\nexport async function deleteAllOrders() {\n  // delete the store\n  const result = await getOrdersStore().destroy();\n  if (result.ok) {\n    ordersStore = null;\n  }\n  return result;\n}\n\nexport async function attachImageToOrder(id, file) {\n  const { name, type } = file;\n  // load the latest rev\n  const { _rev } = await getOrdersStore().get(id);\n  // attache the file\n  const result = await getOrdersStore().putAttachment(\n    id,\n    name,\n    _rev,\n    file,\n    type,\n  );\n  // return the most recent version\n  return getOrderById(result.id);\n}\n\n// ####################################\n// IMAGES STORE\n// ####################################\n\nexport async function getImages() {\n  const result = await getImagesStore().allDocs({\n    include_docs: true,\n  });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getImagesByOrderId(orderId) {\n  // find does not return the attachments\n  const response = await getImagesStore().find({\n    selector: {\n      orderId,\n    },\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getImagesStore().allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getImageById(id) {\n  return await getImagesStore().get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addImage(orderId, imageFile) {\n  const { name, type } = imageFile;\n\n  try {\n    const location = type.includes('image')\n      ? await getGeolocationFromImage(imageFile)\n      : null;\n\n    // inline attachment\n    const doc = {\n      _id: shortid.generate(),\n      orderId,\n      name,\n      location,\n      _attachments: {\n        file: {\n          content_type: type,\n          data: imageFile,\n        },\n      },\n    };\n    // save\n    const result = await getImagesStore().put(doc);\n\n    // return saved image\n    return getImageById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  makeStyles,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useParams } from 'react-router-dom';\nimport {\n  addImage,\n  getOrderById,\n  getImagesByOrderId,\n} from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function OrderDetail() {\n  const classes = useStyles();\n  let { id } = useParams();\n\n  // states\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [order, setOrder] = useState();\n  const [images, setImages] = useState([]);\n\n  // order\n  async function fetchOrderById(id) {\n    setIsLoading(true);\n    setIsError(false);\n    try {\n      const response = await getOrderById(id);\n      setOrder(response);\n    } catch (err) {\n      console.error(err);\n      setIsError(true);\n    }\n    setIsLoading(false);\n  }\n\n  // images\n  async function fetchImagesByOrderId(orderId) {\n    setIsLoading(true);\n    setIsError(false);\n    try {\n      const response = await getImagesByOrderId(orderId);\n      console.log(response);\n      setImages(response);\n    } catch (err) {\n      console.error(err);\n      setIsError(true);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchOrderById(id);\n  }, []);\n\n  useEffect(() => {\n    fetchImagesByOrderId(id);\n  }, []);\n\n  const handleToggle = (task) => (event) => {\n    console.log('Task: ', task.id, ', done: ', event.target.checked);\n\n    setOrder({\n      ...order,\n      tasks: order.tasks.map((item) =>\n        task.id === item.id\n          ? { ...item, done: event.target.checked }\n          : item,\n      ),\n    });\n  };\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('icon-button-file');\n    if (element.files && element.files[0]) {\n      const result = await addImage(order._id, element.files[0]);\n      setImages([...images, result]);\n    }\n  };\n\n  const onClickMap = (data) => (event) => {\n    console.log('==>> onClickMap', data);\n\n    if (!data) {\n      return;\n    }\n\n    const { lat, lng } = data;\n\n    if (['iPhone', 'iPad', 'iPod'].includes(navigator.platform)) {\n      const win = window.open(\n        `maps://maps.google.com/maps?daddr=${lat},${lng}&amp;ll=`,\n        '_top',\n      );\n      return win.focus();\n    }\n    /* default to Google */\n    const win = window.open(\n      `https://maps.google.com/maps?q=${lat},${lng}`,\n      '_blank',\n    );\n    return win.focus();\n  };\n\n  return (\n    <div>\n      {isError && <div>Something went wrong ...</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && !order && (\n        <Typography variant=\"subtitle1\">Order not found</Typography>\n      )}\n      {order && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{order.description}</Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              <IconButton color=\"primary\" component=\"span\">\n                <PlaylistAddIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={1}>\n              <List\n                subheader={\n                  <ListSubheader color=\"primary\">Tasks</ListSubheader>\n                }\n              >\n                {order.tasks.map((task) => (\n                  <ListItem key={task.id}>\n                    <ListItemText primary={task.description} />\n                    <ListItemSecondaryAction>\n                      <Switch\n                        edge=\"end\"\n                        onChange={handleToggle(task)}\n                        checked={task.done}\n                      />\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          </Grid>\n\n          {/* IMAGES AND VIDEOS */}\n\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              <input\n                type=\"file\"\n                accept=\"image/*,video/*\"\n                id=\"icon-button-file\"\n                className={classes.inputFile}\n                onChange={onChangeImageUpload}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton color=\"primary\" component=\"span\">\n                  <AddAPhotoIcon />\n                </IconButton>\n              </label>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper elevation={1}>\n              <GridList cellHeight={180} cols={3}>\n                <GridListTile\n                  key=\"Subheader\"\n                  cols={3}\n                  style={{ height: 'auto' }}\n                >\n                  <ListSubheader component=\"div\" color=\"primary\">\n                    Images\n                  </ListSubheader>\n                </GridListTile>\n\n                {images &&\n                  images\n                    .filter((image) =>\n                      image._attachments.file.content_type.includes(\n                        'image/',\n                      ),\n                    )\n                    .map((image) => (\n                      <GridListTile key={image._id} cols={1}>\n                        <img\n                          src={URL.createObjectURL(\n                            image._attachments.file.data,\n                          )}\n                          alt={image.name}\n                        />\n                        <GridListTileBar\n                          title={image.name}\n                          subtitle={\n                            image.location\n                              ? `${image.location.lat}, ${image.location.lng}`\n                              : 'No location'\n                          }\n                          actionIcon={\n                            image.location ? (\n                              <IconButton\n                                className={classes.icon}\n                                onClick={onClickMap(image.location)}\n                              >\n                                <LocationOnIcon />\n                              </IconButton>\n                            ) : null\n                          }\n                        />\n                      </GridListTile>\n                    ))}\n                <GridListTile\n                  key=\"Subheader\"\n                  cols={3}\n                  style={{ height: 'auto' }}\n                >\n                  <ListSubheader component=\"div\" color=\"primary\">\n                    Videos\n                  </ListSubheader>\n                </GridListTile>\n                {images &&\n                  images\n                    .filter((image) =>\n                      image._attachments.file.content_type.includes(\n                        'video/',\n                      ),\n                    )\n                    .map((image) => (\n                      <GridListTile key={image._id} cols={1}>\n                        <video\n                          height={180}\n                          controls\n                          src={URL.createObjectURL(\n                            image._attachments.file.data,\n                          )}\n                        />\n                      </GridListTile>\n                    ))}\n              </GridList>\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { getOrders } from '../../api/db';\n\nexport default function OrderList() {\n  const { url } = useRouteMatch();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n\n  // orders\n  async function fetchOrders() {\n    setIsLoading(true);\n    setIsError(false);\n    try {\n      const response = await getOrders();\n      setOrders(response);\n    } catch (err) {\n      console.error(err);\n      setIsError(true);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Work Orders</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading && <div>Loading...</div>}\n          {!isLoading && orders.length === 0 && (\n            <Typography variant=\"subtitle1\">\n              No orders to display\n            </Typography>\n          )}\n          {orders.length > 0 && (\n            <Paper elevation={1}>\n              <List>\n                {orders.map((order) => (\n                  <ListItem\n                    key={order.id}\n                    button\n                    component={Link}\n                    to={`${url}/${order.id}`}\n                  >\n                    <ListItemText\n                      primary={order.description}\n                      secondary={order.station}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton color=\"inherit\">\n                        <VisibilityIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRouteMatch, Route, Switch } from \"react-router-dom\";\nimport OrderDetail from \"./OrderDetail\";\nimport OrderList from \"./OrderList\";\n\nexport default function OrderRouter() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <OrderList />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetail />\n      </Route>\n    </Switch>\n  );\n}\n","// web fetch\n\nexport async function fetchOrders() {\n  const response = await fetch(\n    'https://tp-poc-api.herokuapp.com/api/orders',\n  );\n  return response.json();\n}\n\nexport async function fetchOrderById(id) {\n  const response = await fetch(\n    `https://tp-poc-api.herokuapp.com/api/orders/${id}`,\n  );\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchOrders, fetchOrderById } from '../../api/web';\nimport {\n  addOrder,\n  getSyncMetadata,\n  DEFAULT_SYNC_METADATA,\n  updateSyncMetadata,\n  deleteAllOrders,\n} from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  // const [downloadDisabled, setDownloadDisabled] = useState(false);\n  // const [uploadDisabled, setUploadDisabled] = useState(true);\n  // const [deleteDisabled, setDeleteDisabled] = useState(true);\n\n  // load sync metadata\n  const [syncMetadata, setSyncMetadata] = useState(\n    DEFAULT_SYNC_METADATA,\n  );\n\n  useEffect(() => {\n    async function fetchSyncMetadata() {\n      try {\n        const response = await getSyncMetadata();\n        setSyncMetadata(response);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchSyncMetadata();\n  }, []);\n\n  const [inProgress, setInProgress] = useState({\n    loading: false,\n    message: '',\n    err: false,\n  });\n\n  const onClickDownload = async (event) => {\n    setInProgress({\n      loading: true,\n      message: 'Loading work orders from server',\n    });\n\n    try {\n      // fetch data from web api\n      const orders = await fetchOrders();\n      if (orders.length > 0) {\n        setInProgress({\n          message: `Loading tasks for ${orders.length} work orders from server`,\n        });\n\n        const ordersWithTasks = await Promise.all(\n          orders.map((order) => fetchOrderById(order.id)),\n        );\n\n        setInProgress({\n          message: 'Saving work orders to local database',\n        });\n\n        const savedToDb = await Promise.all(\n          ordersWithTasks.map((order) => addOrder(order)),\n        );\n\n        setInProgress({\n          message: 'Finishing to save to local database',\n        });\n\n        // save metadata in the database\n        const updatedMetadata = await updateSyncMetadata({\n          ...syncMetadata,\n          downloadDisabled: true,\n          uploadDisabled: false,\n          deleteDisabled: false,\n        });\n\n        // update sync metadata state\n        setSyncMetadata(updatedMetadata);\n\n        setInProgress({\n          loading: false,\n          message: `Loaded ${ordersWithTasks.length} work orders and tasks successfuly`,\n        });\n      } else {\n        setInProgress({\n          loading: false,\n          message: 'There are no work orders to load from server',\n        });\n      }\n    } catch (err) {\n      console.error(err);\n\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error loading work orders from server. Please try again',\n      });\n    }\n  };\n\n  const onClickUpload = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Syncing work orders back to server',\n      });\n\n      setInProgress({\n        message: 'Finishing sync back to server',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: true,\n        uploadDisabled: true,\n        deleteDisabled: false,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Work orders synced back to server successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error syncing work orders back to server. Please try again',\n      });\n    }\n  };\n\n  const onClickDelete = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Cleaning local database',\n      });\n\n      // delete database\n      await deleteAllOrders();\n\n      setInProgress({\n        message: 'Finishing the cleaning of the local database',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: false,\n        uploadDisabled: true,\n        deleteDisabled: true,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Local database cleaned successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error cleaning the local database. Please try again',\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Home</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudDownloadIcon />}\n            onClick={onClickDownload}\n            disabled={syncMetadata.downloadDisabled}\n          >\n            Download\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudUploadIcon />}\n            onClick={onClickUpload}\n            disabled={syncMetadata.uploadDisabled}\n          >\n            Upload (Not Working)\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={syncMetadata.deleteDisabled}\n          >\n            Delete\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {inProgress.loading && <CircularProgress size={17} />}\n          {'  '}\n          {inProgress.message && <span>{inProgress.message}</span>}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport OrderRouter from '../orders/OrderRouter';\nimport Home from '../home/Home';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   padding: theme.spacing(2),\n    // },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/\">\n      <CssBaseline />\n      <Header />\n      <Container maxWidth=\"md\">\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/orders\">\n              <OrderRouter />\n            </Route>\n          </Switch>\n        </main>\n      </Container>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n// import * as serviceWorker from './serviceWorker';\nimport AddToHomeScreen from 'a2hs.js';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register(serviceWorkerConfig);\n\n// add to home screen\nAddToHomeScreen({\n  brandName: 'My Work',\n});\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport AppMenu from './AppMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const iOS =\n    process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open !== value) {\n      setOpen(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={open}\n          onOpen={toggleDrawer(true)}\n          onClose={toggleDrawer(false)}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          <AppMenu />\n        </SwipeableDrawer>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Work App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: 180,\n  },\n}));\n\nexport default function AppMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"/orders\"\n          primary=\"Orders\"\n          icon={<AssignmentIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n"],"sourceRoot":""}