{"version":3,"sources":["utils/geolocation.js","api/db.js","components/orders/hooks.js","components/orders/ImageList.js","components/orders/VideoList.js","components/orders/TaskList.js","components/orders/OrderDetail.js","components/orders/OrderList.js","components/orders/OrderIndex.js","api/web.js","components/home/Home.js","App.js","index.js","utils/constants.js","components/header/Header.js","components/header/HeaderDrawer.js","components/header/HeaderWifiIcon.js"],"names":["convertDMSToDD","degrees","minutes","seconds","direction","dd","getGeolocationFromImage","imageFile","Promise","resolve","reject","EXIF","allMetaData","this","console","log","tags","GPSLatitude","GPSLatitudeRef","GPSLongitude","GPSLongitudeRef","latDegree","latMinute","latSecond","latDirection","lonDegree","lonMinute","lonSecond","lonDirection","lat","lng","origin","parseGeolocationTags","getGeoloacationFromDevice","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","timeout","shortid","PouchDB","plugin","PouchFindPlugin","on","dbName","syncMetadataStore","ordersStore","imagesStore","videosStore","tasksStore","DEFAULT_SYNC_METADATA","_id","downloadDisabled","downloadedAt","uploadDisabled","uploadedAt","deleteDisabled","deletedAt","getSyncMetadataStore","getOrdersStore","createIndex","index","fields","getTasksStore","getImagesStore","getVideosStore","getSyncMetadata","a","get","name","updateSyncMetadata","data","previous","doc","_rev","put","cleanDatabases","destroy","result","ok","getOrders","find","selector","createdAt","$gte","sort","docs","getOrderById","id","addOrder","order","getImagesByOrderId","orderId","response","ids","map","allDocs","keys","include_docs","attachments","binary","rows","row","getImageById","addImage","type","location","Date","toISOString","_attachments","file","content_type","error","deleteImage","image","remove","getVideosByOrderId","getVideoById","addVideo","deleteVideo","video","getTasksByOrderId","getTaskById","addTask","task","completed","updateTask","deleteTask","useStyles","makeStyles","theme","inputFile","display","icon","color","backdrop","zIndex","drawer","backdropContent","maxWidth","maxHeight","ImageList","classes","initialValue","useState","isError","setIsError","isLoading","setIsLoading","setData","shouldReload","setShouldReload","useEffect","loadData","now","valueOf","useGetImagesByOrderId","images","reload","open","setOpen","selectedImage","setSelectedImage","handleOpenImage","onChangeImageUpload","event","element","document","getElementById","files","handleDeleteImage","Backdrop","className","onClick","src","alt","Grid","item","container","xs","justify","accept","onChange","htmlFor","IconButton","component","Paper","elevation","GridList","cellHeight","cols","GridListTile","key","style","height","ListSubheader","backgroundColor","length","imageURL","URL","createObjectURL","GridListTileBar","title","subtitle","actionIcon","VideoList","useGetVideosByOrderId","videos","selectedVideo","setSelectedVideo","handleOpenVideo","handleDeleteVideo","controls","videoURL","TaskList","useGetTasksByOrderId","tasks","newTaskDescription","setNewTaskDescription","handleClose","handleAddTask","description","handleCompleteTask","target","checked","handleDeleteTask","Dialog","onClose","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","label","value","DialogActions","Button","List","subheader","ListItem","Switch","edge","ListItemText","primary","ListItemSecondaryAction","OrderDetail","useParams","useGetOrderById","Typography","variant","spacing","OrderList","url","useRouteMatch","useGetOrders","orders","button","Link","to","secondary","station","OrderRouter","path","exact","fetchOrders","fetch","serverUrl","json","fetchTasksByOrderId","root","marginRight","Home","syncMetadata","setSyncMetadata","fetchSyncMetadata","loading","message","inProgress","setInProgress","onClickDownload","all","ordersSavedToDb","orderIds","flat","updatedMetadata","onClickUpload","onClickDelete","startIcon","disabled","CircularProgress","size","main","paddingTop","App","basename","CssBaseline","Header","Container","ReactDOM","render","AddToHomeScreen","brandName","flexGrow","menuButton","iOS","process","browser","test","userAgent","toggleDrawer","anchor","onOpen","disableBackdropTransition","disableDiscovery","aria-label","ListItemLink","props","renderLink","React","useMemo","forwardRef","itemProps","ref","width","HeaderDrawer","HeaderWifiIcon","isOnline","setIsOnline","window","addEventListener","checkInternet","onLine","method","mode","then","resp","catch","e"],"mappings":"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","file":"static/js/main.525bb2b4.chunk.js","sourcesContent":["import * as EXIF from 'exif-js';\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n  let dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction === 'S' || direction === 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nfunction parseGeolocationTags(tags) {\n  const {\n    GPSLatitude,\n    GPSLatitudeRef,\n    GPSLongitude,\n    GPSLongitudeRef,\n  } = tags;\n\n  if (\n    !GPSLatitude ||\n    !GPSLatitudeRef ||\n    !GPSLongitude ||\n    !GPSLongitudeRef\n  ) {\n    return null;\n  }\n\n  const latDegree = GPSLatitude[0];\n  const latMinute = GPSLatitude[1];\n  const latSecond = GPSLatitude[2];\n  const latDirection = GPSLatitudeRef;\n\n  const lonDegree = GPSLongitude[0];\n  const lonMinute = GPSLongitude[1];\n  const lonSecond = GPSLongitude[2];\n  const lonDirection = GPSLongitudeRef;\n\n  const lat = convertDMSToDD(\n    latDegree,\n    latMinute,\n    latSecond,\n    latDirection,\n  );\n\n  const lng = convertDMSToDD(\n    lonDegree,\n    lonMinute,\n    lonSecond,\n    lonDirection,\n  );\n\n  return {\n    lat,\n    lng,\n    origin: 'EXIF',\n  };\n}\n\nexport const getGeolocationFromImage = (imageFile) => {\n  return new Promise((resolve, reject) => {\n    EXIF.getData(imageFile, function () {\n      const allMetaData = EXIF.getAllTags(this);\n      console.log('==>> EXIF ALL', allMetaData);\n      resolve(parseGeolocationTags(allMetaData));\n    });\n  });\n};\n\nexport const getGeoloacationFromDevice = () => {\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        // success\n        (position) => {\n          console.log(position);\n          resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            origin: 'DEVICE',\n          });\n        },\n        // error\n        (err) => {\n          reject(err);\n          // error.code can be:\n          //   0: unknown error\n          //   1: permission denied\n          //   2: position unavailable (error response from location provider)\n          //   3: timed out\n        },\n        // options\n        {\n          timeout: 5000,\n          // enableHighAccuracy: true, // slower to resolve and uses more battery\n        },\n      );\n    } else {\n      console.log(\n        'Geolocation is not supported for this Browser/OS.',\n      );\n      reject();\n    }\n  });\n};\n","import PouchDB from 'pouchdb';\nimport PouchFindPlugin from 'pouchdb-find';\nimport * as shortid from 'shortid';\nimport {\n  getGeolocationFromImage,\n  getGeoloacationFromDevice,\n} from '../utils/geolocation';\n\nshortid.characters(\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@',\n);\n\n// enable queries\n// https://pouchdb.com/guides/mango-queries.html\nPouchDB.plugin(PouchFindPlugin);\n\nPouchDB.on('destroyed', function (dbName) {\n  // called whenever a db is destroyed.\n  console.log('==>> POUCHEDB destroyed', dbName);\n});\n\nconst SYNC_METADATA = 'sync-metadata';\nconst ORDERS = 'orders';\nconst TASKS = 'tasks';\nconst IMAGES = 'images';\nconst VIDEOS = 'videos';\n\nexport const DEFAULT_SYNC_METADATA = {\n  _id: 'default',\n  downloadDisabled: false,\n  downloadedAt: '',\n  uploadDisabled: true,\n  uploadedAt: '',\n  deleteDisabled: true,\n  deletedAt: '',\n};\n\nlet syncMetadataStore;\nlet ordersStore;\nlet imagesStore;\nlet videosStore;\nlet tasksStore;\n\nfunction getSyncMetadataStore() {\n  if (!syncMetadataStore) {\n    syncMetadataStore = new PouchDB(SYNC_METADATA);\n  }\n  return syncMetadataStore;\n}\n\nfunction getOrdersStore() {\n  if (!ordersStore) {\n    ordersStore = new PouchDB(ORDERS);\n\n    ordersStore.createIndex({\n      index: { fields: ['createdAt'] },\n    });\n  }\n  return ordersStore;\n}\n\nfunction getTasksStore() {\n  if (!tasksStore) {\n    tasksStore = new PouchDB(TASKS);\n\n    tasksStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return tasksStore;\n}\n\nfunction getImagesStore() {\n  if (!imagesStore) {\n    imagesStore = new PouchDB(IMAGES);\n\n    imagesStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return imagesStore;\n}\n\nfunction getVideosStore() {\n  if (!videosStore) {\n    videosStore = new PouchDB(VIDEOS);\n\n    videosStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return videosStore;\n}\n\n// ####################################\n// SYNC METADATA STORE\n// ####################################\n\nexport async function getSyncMetadata() {\n  try {\n    return await getSyncMetadataStore().get('default');\n  } catch (err) {\n    if (err && err.name === 'not_found') {\n      return DEFAULT_SYNC_METADATA;\n    }\n  }\n}\n\nexport async function updateSyncMetadata(data) {\n  const previous = await getSyncMetadata();\n  const doc =\n    previous && previous._rev\n      ? { ...data, _rev: previous._rev }\n      : data;\n\n  // update\n  await getSyncMetadataStore().put(doc);\n\n  // return updated version\n  return await getSyncMetadataStore().get('default');\n}\n\nexport async function cleanDatabases() {\n  // delete the order store\n  let result = await getOrdersStore().destroy();\n  if (result.ok) {\n    ordersStore = null;\n  }\n\n  // delete the tasks store\n  result = await getTasksStore().destroy();\n  if (result.ok) {\n    tasksStore = null;\n  }\n\n  // delete the images store\n  result = await getImagesStore().destroy();\n  if (result.ok) {\n    imagesStore = null;\n  }\n\n  // delete the videos store\n  result = await getVideosStore().destroy();\n  if (result.ok) {\n    videosStore = null;\n  }\n\n  return result;\n}\n\n// ####################################\n// ORDERS STORE\n// ####################################\n\nexport async function getOrders() {\n  const result = await getOrdersStore().find({\n    selector: {\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  return result.docs;\n}\n\nexport async function getOrderById(id) {\n  return await getOrdersStore().get(id);\n}\n\nexport async function addOrder(order) {\n  let doc;\n  // pouch ex[ect a _id field\n  if (order.id) {\n    doc = { ...order, _id: order.id };\n  }\n  // save\n  const result = await getOrdersStore().put(doc);\n  // return the most recebt version\n  return getOrderById(result.id);\n}\n\n// ####################################\n// IMAGES STORE\n// ####################################\n\nexport async function getImagesByOrderId(orderId) {\n  // find does not return the attachments\n  const response = await getImagesStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getImagesStore().allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getImageById(id) {\n  return await getImagesStore().get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addImage(orderId, imageFile) {\n  const { name, type } = imageFile;\n\n  try {\n    // try to retrieve location from EXIF tags\n    let location = await getGeolocationFromImage(imageFile);\n\n    // ask current location from device\n    if (!location) {\n      location = await getGeoloacationFromDevice();\n    }\n\n    // inline attachment\n    const doc = {\n      _id: shortid.generate(),\n      orderId,\n      name,\n      location,\n      createdAt: new Date().toISOString(),\n      _attachments: {\n        file: {\n          content_type: type,\n          data: imageFile,\n        },\n      },\n    };\n    // save\n    const result = await getImagesStore().put(doc);\n\n    // return saved image\n    return getImageById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteImage(image) {\n  // load latest rev\n  const doc = await getImagesStore().get(image._id);\n  // remove\n  return getImagesStore().remove(doc);\n}\n\n// ####################################\n// VIDEOS STORE\n// ####################################\n\nexport async function getVideosByOrderId(orderId) {\n  // find does not return the attachments\n  const response = await getVideosStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getVideosStore().allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getVideoById(id) {\n  return await getVideosStore().get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addVideo(orderId, imageFile) {\n  const { name, type } = imageFile;\n\n  try {\n    // inline attachment\n    const doc = {\n      _id: shortid.generate(),\n      orderId,\n      name,\n      createdAt: new Date().toISOString(),\n      _attachments: {\n        file: {\n          content_type: type,\n          data: imageFile,\n        },\n      },\n    };\n    // save\n    const result = await getVideosStore().put(doc);\n\n    // return saved image\n    return getVideoById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteVideo(video) {\n  // load latest rev\n  const doc = await getVideosStore().get(video._id);\n  // remove\n  return getVideosStore().remove(doc);\n}\n\n// ####################################\n// TASKS STORE\n// ####################################\n\nexport async function getTasksByOrderId(orderId) {\n  const response = await getTasksStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getTasksStore().allDocs({\n    keys: ids,\n    include_docs: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getTaskById(id) {\n  return await getTasksStore().get(id);\n}\n\nexport async function addTask(task) {\n  try {\n    // save\n    const result = await getTasksStore().put({\n      ...task,\n      _id: shortid.generate(),\n      createdAt: new Date().toISOString(),\n      completed: false,\n    });\n\n    // return saved doc\n    return getTaskById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function updateTask(task) {\n  try {\n    // get task\n    const { _rev } = await getTaskById(task._id);\n    // save\n    const result = await getTasksStore().put({\n      ...task,\n      _rev,\n    });\n\n    // return saved doc\n    return getTaskById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteTask(task) {\n  // load latest rev\n  const doc = await getTasksStore().get(task._id);\n  // remove\n  return getTasksStore().remove(doc);\n}\n","import { useState, useEffect } from 'react';\nimport {\n  getOrders,\n  getOrderById,\n  getImagesByOrderId,\n  getVideosByOrderId,\n  getTasksByOrderId,\n} from '../../api/db';\n\nexport const useGetOrders = (initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrders());\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetOrderById = (id, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrderById(id));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [id, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetTasksByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getTasksByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetImagesByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getImagesByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetVideosByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getVideosByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Backdrop,\n} from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n// import LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetImagesByOrderId } from './hooks';\nimport { addImage, deleteImage } from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  backdropContent: {\n    maxWidth: '95%',\n    maxHeight: '95%',\n  },\n}));\n\nexport default function ImageList({ orderId }) {\n  const classes = useStyles();\n\n  const [images, isLoading, isError, reload] = useGetImagesByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenImage = (image) => () => {\n    // clicked image\n    setSelectedImage(image);\n    // open backdrop\n    setOpen(!open);\n  };\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('input-image-file');\n    if (element.files && element.files[0]) {\n      await addImage(orderId, element.files[0]);\n      reload();\n    }\n  };\n\n  const handleDeleteImage = (image) => async (event) => {\n    // delete\n    await deleteImage(image);\n    // reload images\n    reload();\n  };\n\n  // const onClickMap = (data) => (event) => {\n  //   console.log('==>> onClickMap', data);\n\n  //   if (!data) {\n  //     return;\n  //   }\n\n  //   const { lat, lng } = data;\n\n  //   if (['iPhone', 'iPad', 'iPod'].includes(navigator.platform)) {\n  //     const win = window.open(\n  //       `maps://maps.google.com/maps?daddr=${lat},${lng}&amp;ll=`,\n  //       '_top',\n  //     );\n  //     return win.focus();\n  //   }\n  //   /* default to Google */\n  //   const win = window.open(\n  //     `https://maps.google.com/maps?q=${lat},${lng}`,\n  //     '_blank',\n  //   );\n  //   return win.focus();\n  // };\n\n  return (\n    <>\n      {/* BACKDROP */}\n\n      <Backdrop\n        className={classes.backdrop}\n        open={open}\n        onClick={handleClose}\n      >\n        {selectedImage && (\n          <img\n            className={classes.backdropContent}\n            src={selectedImage}\n            alt=\"\"\n          />\n        )}\n      </Backdrop>\n\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"input-image-file\"\n            className={classes.inputFile}\n            onChange={onChangeImageUpload}\n          />\n          <label htmlFor=\"input-image-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <PhotoCamera />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-image\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Images\n                {!isLoading && images.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading images)' : ''}\n              </ListSubheader>\n            </GridListTile>\n\n            {images &&\n              images.map((image) => {\n                const imageURL = URL.createObjectURL(\n                  image._attachments.file.data,\n                );\n                return (\n                  <GridListTile\n                    key={image._id}\n                    cols={1}\n                    onClick={handleOpenImage(imageURL)}\n                  >\n                    <img src={imageURL} alt={image.name} />\n                    <GridListTileBar\n                      title={image.name}\n                      subtitle={\n                        image.location\n                          ? `${image.location.lat}, ${image.location.lng}`\n                          : 'No location'\n                      }\n                      actionIcon={\n                        <IconButton\n                          className={classes.icon}\n                          onClick={handleDeleteImage(image)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                );\n              })}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Backdrop,\n} from '@material-ui/core';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetVideosByOrderId } from './hooks';\nimport { addVideo, deleteVideo } from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  backdropContent: {\n    maxWidth: '95%',\n    maxHeight: '95%',\n  },\n}));\n\nexport default function VideoList({ orderId }) {\n  const classes = useStyles();\n\n  const [videos, isLoading, isError, reload] = useGetVideosByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState('');\n\n  const handleClose = () => {\n    setSelectedVideo('');\n    setOpen(false);\n  };\n\n  const handleOpenVideo = (video) => () => {\n    // clicked video\n    setSelectedVideo(video);\n    // open backdrop\n    setOpen(!open);\n  };\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('input-video-file');\n    if (element.files && element.files[0]) {\n      await addVideo(orderId, element.files[0]);\n      reload();\n    }\n  };\n\n  const handleDeleteVideo = (video) => async (event) => {\n    // delete\n    await deleteVideo(video);\n    // reload videos\n    reload();\n  };\n\n  return (\n    <>\n      {/* BACKDROP */}\n\n      <Backdrop\n        className={classes.backdrop}\n        open={open}\n        onClick={handleClose}\n      >\n        {selectedVideo && (\n          <video controls className={classes.backdropContent}>\n            <source src={selectedVideo} />\n            <p>This browser does not support the video element</p>\n          </video>\n        )}\n      </Backdrop>\n\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            id=\"input-video-file\"\n            className={classes.inputFile}\n            onChange={onChangeImageUpload}\n          />\n          <label htmlFor=\"input-video-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <VideocamIcon />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-video\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Videos\n                {!isLoading && videos.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading videos)' : ''}\n              </ListSubheader>\n            </GridListTile>\n            {videos &&\n              videos.map((video) => {\n                const videoURL = URL.createObjectURL(\n                  video._attachments.file.data,\n                );\n                return (\n                  <GridListTile\n                    key={video._id}\n                    cols={1}\n                    onClick={handleOpenVideo(videoURL)}\n                  >\n                    <video height={180} controls={false}>\n                      <source\n                        type={video._attachments.file.content_type}\n                        src={videoURL}\n                      />\n                      <p>\n                        This browser does not support the video\n                        element\n                      </p>\n                    </video>\n                    <GridListTileBar\n                      title={video.name}\n                      actionIcon={\n                        <IconButton\n                          className={classes.icon}\n                          onClick={handleDeleteVideo(video)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                );\n              })}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetTasksByOrderId } from './hooks';\nimport { updateTask, addTask, deleteTask } from '../../api/db';\n\nexport default function TaskList({ orderId }) {\n  const [tasks, isLoading, isError, reload] = useGetTasksByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [newTaskDescription, setNewTaskDescription] = useState(false);\n\n  const onChange = (event) => {\n    setNewTaskDescription(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAddTask = async () => {\n    // save task\n    await addTask({\n      orderId,\n      description: newTaskDescription,\n    });\n    // close dialog\n    handleClose();\n    // reload tasks\n    reload();\n  };\n\n  const handleCompleteTask = (task) => async (event) => {\n    await updateTask({\n      ...task,\n      completed: event.target.checked,\n    });\n    reload();\n  };\n\n  const handleDeleteTask = (task) => async (event) => {\n    // delete task\n    await deleteTask(task);\n    // reload tasks\n    reload();\n  };\n\n  return (\n    <>\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <IconButton\n            color=\"primary\"\n            component=\"span\"\n            onClick={handleClickOpen}\n          >\n            <AddIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      {/* DIALOG */}\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle style={{ backgroundColor: '#E5E5E5' }}>\n          New Task\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id=\"description\"\n            label=\"Description\"\n            fullWidth\n            onChange={onChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddTask} color=\"primary\">\n            Add Task\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <List\n            subheader={\n              <ListSubheader\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Tasks\n                {!isLoading && tasks.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading tasks)' : ''}\n              </ListSubheader>\n            }\n          >\n            {tasks &&\n              tasks.map((task) => (\n                <ListItem key={task._id}>\n                  <Switch\n                    edge=\"start\"\n                    onChange={handleCompleteTask(task)}\n                    checked={task.completed}\n                  />\n                  <ListItemText primary={task.description} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={handleDeleteTask(task)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n          </List>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { useGetOrderById } from './hooks';\nimport ImageList from './ImageList';\nimport VideoList from './VideoList';\nimport TaskList from './TaskList';\n\nexport default function OrderDetail() {\n  let { id } = useParams();\n\n  // states\n  const [order, isLoading, isError] = useGetOrderById(id);\n\n  return (\n    <div>\n      {isError && <div>Something went wrong ...</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && !order && (\n        <Typography variant=\"subtitle1\">Order not found</Typography>\n      )}\n      {order && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{order.description}</Typography>\n          </Grid>\n          <TaskList orderId={id} />\n          <ImageList orderId={id} />\n          <VideoList orderId={id} />\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useGetOrders } from './hooks';\n\nexport default function OrderList() {\n  const { url } = useRouteMatch();\n  const [orders, isLoading, isError] = useGetOrders([]);\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Work Orders</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading && <div>Loading...</div>}\n          {!isLoading && orders.length === 0 && (\n            <Typography variant=\"subtitle1\">\n              No orders to display\n            </Typography>\n          )}\n          {orders.length > 0 && (\n            <Paper elevation={1}>\n              <List>\n                {orders.map((order) => (\n                  <ListItem\n                    key={order._id}\n                    button\n                    component={Link}\n                    to={`${url}/${order._id}`}\n                  >\n                    <ListItemText\n                      primary={order.description}\n                      secondary={order.station}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton color=\"inherit\">\n                        <VisibilityIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useRouteMatch, Route, Switch } from 'react-router-dom';\nimport OrderDetail from './OrderDetail';\nimport OrderList from './OrderList';\n\nexport default function OrderRouter() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <OrderList />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetail />\n      </Route>\n    </Switch>\n  );\n}\n","// web fetch\nimport {serverUrl} from '../utils/constants';\n\nexport async function fetchOrders() {\n    const response = await fetch(\n        `${serverUrl}/orders`,\n    );\n    return response.json();\n}\n\nexport async function fetchOrderById(id) {\n    const response = await fetch(\n        `${serverUrl}/orders/${id}`,\n    );\n    return response.json();\n}\n\nexport async function fetchTasksByOrderId(orderId) {\n    const response = await fetch(\n        `${serverUrl}/tasks/${orderId}`,\n    );\n    return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchOrders, fetchTasksByOrderId } from '../../api/web';\nimport {\n  addOrder,\n  getSyncMetadata,\n  DEFAULT_SYNC_METADATA,\n  updateSyncMetadata,\n  cleanDatabases,\n  addTask,\n} from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  // const [downloadDisabled, setDownloadDisabled] = useState(false);\n  // const [uploadDisabled, setUploadDisabled] = useState(true);\n  // const [deleteDisabled, setDeleteDisabled] = useState(true);\n\n  // load sync metadata\n  const [syncMetadata, setSyncMetadata] = useState(\n    DEFAULT_SYNC_METADATA,\n  );\n\n  useEffect(() => {\n    async function fetchSyncMetadata() {\n      try {\n        const response = await getSyncMetadata();\n        setSyncMetadata(response);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchSyncMetadata();\n  }, []);\n\n  const [inProgress, setInProgress] = useState({\n    loading: false,\n    message: '',\n    err: false,\n  });\n\n  const onClickDownload = async (event) => {\n    setInProgress({\n      loading: true,\n      message: 'Loading work orders from server',\n    });\n\n    try {\n      // fetch data from web api\n      const orders = await fetchOrders();\n      if (orders.length > 0) {\n        setInProgress({\n          message: `Loading tasks for ${orders.length} work orders from server`,\n        });\n\n        setInProgress({\n          message: 'Saving work orders to local database',\n        });\n\n        const ordersSavedToDb = await Promise.all(\n          orders.map((order) => addOrder(order)),\n        );\n\n        setInProgress({\n          message: \"Saving work orders' tasks to local database\",\n        });\n\n        const orderIds = ordersSavedToDb.map((order) => order.id);\n\n        const tasks = await Promise.all(\n          orderIds.map((orderId) => fetchTasksByOrderId(orderId)),\n        );\n\n        await Promise.all(tasks.flat().map((task) => addTask(task)));\n\n        setInProgress({\n          message: 'Finishing to save to local database',\n        });\n\n        // save metadata in the database\n        const updatedMetadata = await updateSyncMetadata({\n          ...syncMetadata,\n          downloadDisabled: true,\n          uploadDisabled: false,\n          deleteDisabled: false,\n        });\n\n        // update sync metadata state\n        setSyncMetadata(updatedMetadata);\n\n        setInProgress({\n          loading: false,\n          message: `Loaded ${ordersSavedToDb.length} work orders successfuly`,\n        });\n      } else {\n        setInProgress({\n          loading: false,\n          message: 'There are no work orders to load from server',\n        });\n      }\n    } catch (err) {\n      console.error(err);\n\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error loading work orders from server. Please try again',\n      });\n    }\n  };\n\n  const onClickUpload = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Syncing work orders back to server',\n      });\n\n      setInProgress({\n        message: 'Finishing sync back to server',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: true,\n        uploadDisabled: true,\n        deleteDisabled: false,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Work orders synced back to server successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error syncing work orders back to server. Please try again',\n      });\n    }\n  };\n\n  const onClickDelete = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Cleaning local database',\n      });\n\n      // delete databases\n      await cleanDatabases();\n\n      setInProgress({\n        message: 'Finishing the cleaning of the local database',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: false,\n        uploadDisabled: true,\n        deleteDisabled: true,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Local database cleaned successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error cleaning the local database. Please try again',\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Home</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudDownloadIcon />}\n            onClick={onClickDownload}\n            disabled={syncMetadata.downloadDisabled}\n          >\n            Download\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudUploadIcon />}\n            onClick={onClickUpload}\n            disabled={syncMetadata.uploadDisabled}\n          >\n            Upload (Not Working)\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={syncMetadata.deleteDisabled}\n          >\n            Delete\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {inProgress.loading && <CircularProgress size={17} />}\n          {'  '}\n          {inProgress.message && <span>{inProgress.message}</span>}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Header from './components/header/Header';\nimport OrderIndex from './components/orders/OrderIndex';\nimport Home from './components/home/Home';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   padding: theme.spacing(2),\n    // },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/\">\n      <CssBaseline />\n      <Header />\n      <Container maxWidth=\"md\">\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/orders\">\n              <OrderIndex />\n            </Route>\n          </Switch>\n        </main>\n      </Container>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport AddToHomeScreen from 'a2hs.js';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register(serviceWorkerConfig);\n\n// add to home screen\nAddToHomeScreen({\n  brandName: 'My Work',\n});\n","export const serverUrl = 'https://tp-poc-api.herokuapp.com/api';\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport HeaderDrawer from './HeaderDrawer';\nimport { HeaderWifiIcon } from './HeaderWifiIcon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const iOS =\n    process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open !== value) {\n      setOpen(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={open}\n          onOpen={toggleDrawer(true)}\n          onClose={toggleDrawer(false)}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          <HeaderDrawer />\n        </SwipeableDrawer>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Work App\n          </Typography>\n          <HeaderWifiIcon/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: 180,\n  },\n}));\n\nexport default function HeaderDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"/orders\"\n          primary=\"Orders\"\n          icon={<AssignmentIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport {serverUrl} from '../../utils/constants';\nexport const HeaderWifiIcon = () => {\n    const [isOnline, setIsOnline] = useState();\n\n    useEffect(() => {\n        window.addEventListener('online', checkInternet);\n        window.addEventListener('offline', checkInternet);\n        checkInternet();\n    },[])\n\n    const checkInternet = () => {\n        if (navigator.onLine) {\n            fetch(`${serverUrl}/orders`, {method: 'HEAD', mode: 'no-cors'}).then(function (resp) {\n                setIsOnline(resp && (resp.ok || resp.type === 'opaque') ? true : false)\n            }).catch(e => {\n                setIsOnline(false)\n            });\n        } else {\n            // handle offline status\n            setIsOnline(false)\n        }\n    }\n    return isOnline ? <WifiIcon/> : <WifiOffIcon/>\n}\n"],"sourceRoot":""}