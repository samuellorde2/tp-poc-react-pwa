{"version":3,"sources":["utils/geolocation.js","api/db.js","components/orders/hooks.js","components/orders/ImageList.js","components/orders/VideoList.js","components/orders/TaskList.js","components/orders/OrderDetail.js","components/orders/OrderList.js","components/orders/OrderIndex.js","api/web.js","components/home/Home.js","App.js","index.js","components/header/Header.js","components/header/HeaderDrawer.js"],"names":["convertDMSToDD","degrees","minutes","seconds","direction","dd","getGeolocationFromImage","imageFile","Promise","resolve","reject","EXIF","allMetaData","this","console","log","tags","GPSLatitude","GPSLatitudeRef","GPSLongitude","GPSLongitudeRef","latDegree","latMinute","latSecond","latDirection","lonDegree","lonMinute","lonSecond","lonDirection","lat","lng","origin","parseGeolocationTags","getGeoloacationFromDevice","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","timeout","shortid","PouchDB","plugin","PouchFindPlugin","on","dbName","syncMetadataStore","ordersStore","imagesStore","videosStore","tasksStore","DEFAULT_SYNC_METADATA","_id","downloadDisabled","downloadedAt","uploadDisabled","uploadedAt","deleteDisabled","deletedAt","getSyncMetadataStore","getOrdersStore","createIndex","index","fields","getTasksStore","getImagesStore","getVideosStore","getSyncMetadata","a","get","name","updateSyncMetadata","data","previous","doc","_rev","put","cleanDatabases","destroy","result","ok","getOrders","find","selector","createdAt","$gte","sort","docs","getOrderById","id","addOrder","order","getImagesByOrderId","orderId","response","ids","map","allDocs","keys","include_docs","attachments","binary","rows","row","getImageById","addImage","type","location","Date","toISOString","_attachments","file","content_type","error","deleteImage","image","remove","getVideosByOrderId","getVideoById","addVideo","deleteVideo","video","getTasksByOrderId","getTaskById","addTask","task","completed","updateTask","deleteTask","useStyles","makeStyles","theme","inputFile","display","icon","color","ImageList","classes","initialValue","useState","isError","setIsError","isLoading","setIsLoading","setData","shouldReload","setShouldReload","useEffect","loadData","now","valueOf","useGetImagesByOrderId","images","reload","onChangeImageUpload","event","element","document","getElementById","files","handleDeleteImage","Grid","item","container","xs","justify","accept","className","onChange","htmlFor","IconButton","component","Paper","elevation","GridList","cellHeight","cols","GridListTile","key","style","height","ListSubheader","backgroundColor","length","src","URL","createObjectURL","alt","GridListTileBar","title","subtitle","actionIcon","onClick","VideoList","useGetVideosByOrderId","videos","handleDeleteVideo","controls","TaskList","useGetTasksByOrderId","tasks","open","setOpen","newTaskDescription","setNewTaskDescription","handleClose","handleAddTask","description","handleCompleteTask","target","checked","handleDeleteTask","Dialog","onClose","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","label","value","DialogActions","Button","List","subheader","ListItem","Switch","edge","ListItemText","primary","ListItemSecondaryAction","OrderDetail","useParams","useGetOrderById","Typography","variant","spacing","OrderList","url","useRouteMatch","useGetOrders","orders","button","Link","to","secondary","station","OrderRouter","path","exact","fetchOrders","fetch","json","fetchTasksByOrderId","root","marginRight","Home","syncMetadata","setSyncMetadata","fetchSyncMetadata","loading","message","inProgress","setInProgress","onClickDownload","all","ordersSavedToDb","orderIds","flat","updatedMetadata","onClickUpload","onClickDelete","startIcon","disabled","CircularProgress","size","main","paddingTop","App","basename","CssBaseline","Header","Container","maxWidth","ReactDOM","render","AddToHomeScreen","brandName","flexGrow","menuButton","iOS","process","browser","test","userAgent","toggleDrawer","anchor","onOpen","disableBackdropTransition","disableDiscovery","aria-label","ListItemLink","props","renderLink","React","useMemo","forwardRef","itemProps","ref","width","HeaderDrawer"],"mappings":"sWAEA,SAASA,EAAeC,EAASC,EAASC,EAASC,GACjD,IAAIC,EAAKJ,EAAUC,EAAU,GAAKC,EAAU,KAI5C,MAHkB,MAAdC,GAAmC,MAAdA,IACvBC,IAAW,GAENA,EAmDF,IAAMC,EAA0B,SAACC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,UAAaJ,GAAW,WACtB,IAAMK,EAAcD,aAAgBE,MACpCC,QAAQC,IAAI,gBAAiBH,GAC7BH,EArDN,SAA8BO,GAAO,IAEjCC,EAIED,EAJFC,YACAC,EAGEF,EAHFE,eACAC,EAEEH,EAFFG,aACAC,EACEJ,EADFI,gBAGF,IACGH,IACAC,IACAC,IACAC,EAED,OAAO,KAGT,IAAMC,EAAYJ,EAAY,GACxBK,EAAYL,EAAY,GACxBM,EAAYN,EAAY,GACxBO,EAAeN,EAEfO,EAAYN,EAAa,GACzBO,EAAYP,EAAa,GACzBQ,EAAYR,EAAa,GACzBS,EAAeR,EAgBrB,MAAO,CACLS,IAfU7B,EACVqB,EACAC,EACAC,EACAC,GAYAM,IATU9B,EACVyB,EACAC,EACAC,EACAC,GAMAG,OAAQ,QASEC,CAAqBpB,WAKtBqB,EAA4B,WACvC,OAAO,IAAIzB,SAAQ,SAACC,EAASC,GACvBwB,UAAUC,YACZD,UAAUC,YAAYC,oBAEpB,SAACC,GACCvB,QAAQC,IAAIsB,GACZ5B,EAAQ,CACNoB,IAAKQ,EAASC,OAAOC,SACrBT,IAAKO,EAASC,OAAOE,UACrBT,OAAQ,cAIZ,SAACU,GACC/B,EAAO+B,KAQT,CACEC,QAAS,OAKb5B,QAAQC,IACN,qDAEFL,SC5FNiC,aACE,oEAKFC,IAAQC,OAAOC,KAEfF,IAAQG,GAAG,aAAa,SAAUC,GAEhClC,QAAQC,IAAI,0BAA2BiC,MAGzC,IAgBIC,EACAC,EACAC,EACAC,EACAC,EAdSC,EAAwB,CACnCC,IAAK,UACLC,kBAAkB,EAClBC,aAAc,GACdC,gBAAgB,EAChBC,WAAY,GACZC,gBAAgB,EAChBC,UAAW,IASb,SAASC,IAIP,OAHKb,IACHA,EAAoB,IAAIL,IAxBN,kBA0BbK,EAGT,SAASc,IAQP,OAPKb,IACHA,EAAc,IAAIN,IA9BP,WAgCCoB,YAAY,CACtBC,MAAO,CAAEC,OAAQ,CAAC,gBAGfhB,EAGT,SAASiB,IAQP,OAPKd,IACHA,EAAa,IAAIT,IAxCP,UA0CCoB,YAAY,CACrBC,MAAO,CAAEC,OAAQ,CAAC,YAAa,cAG5Bb,EAGT,SAASe,IAQP,OAPKjB,IACHA,EAAc,IAAIP,IAlDP,WAoDCoB,YAAY,CACtBC,MAAO,CAAEC,OAAQ,CAAC,YAAa,cAG5Bf,EAGT,SAASkB,IAQP,OAPKjB,IACHA,EAAc,IAAIR,IA5DP,WA8DCoB,YAAY,CACtBC,MAAO,CAAEC,OAAQ,CAAC,YAAa,cAG5Bd,EAOF,SAAekB,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EAEUT,IAAuBU,IAAI,WAFrC,4EAIC,MAAoB,cAAb,KAAIC,KAJZ,0CAKMnB,GALN,0D,sBAUA,SAAeoB,EAAtB,kC,4CAAO,WAAkCC,GAAlC,iBAAAJ,EAAA,sEACkBD,IADlB,cACCM,EADD,OAECC,EACJD,GAAYA,EAASE,KAArB,eACSH,EADT,CACeG,KAAMF,EAASE,OAC1BH,EALD,SAQCb,IAAuBiB,IAAIF,GAR5B,uBAWQf,IAAuBU,IAAI,WAXnC,oF,sBAcA,SAAeQ,IAAtB,+B,4CAAO,4BAAAT,EAAA,sEAEcR,IAAiBkB,UAF/B,cAEDC,EAFC,QAGMC,KACTjC,EAAc,MAJX,SAQUiB,IAAgBc,UAR1B,cAQLC,EARK,QASMC,KACT9B,EAAa,MAVV,UAcUe,IAAiBa,UAd3B,eAcLC,EAdK,QAeMC,KACThC,EAAc,MAhBX,UAoBUkB,IAAiBY,UApB3B,eAoBLC,EApBK,QAqBMC,KACT/B,EAAc,MAtBX,kBAyBE8B,GAzBF,6C,sBAgCA,SAAeE,IAAtB,+B,4CAAO,4BAAAb,EAAA,sEACgBR,IAAiBsB,KAAK,CACzCC,SAAU,CACRC,UAAW,CAAEC,KAAM,OAErBC,KAAM,CAAC,eALJ,cACCP,EADD,yBAOEA,EAAOQ,MAPT,4C,sBAUA,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,SAAArB,EAAA,sEACQR,IAAiBS,IAAIoB,GAD7B,oF,sBAIA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAvB,EAAA,6DAGDuB,EAAMF,KACRf,EAAG,eAAQiB,EAAR,CAAevC,IAAKuC,EAAMF,MAJ1B,SAOgB7B,IAAiBgB,IAAIF,GAPrC,cAOCK,EAPD,yBASES,EAAaT,EAAOU,KATtB,4C,sBAgBA,SAAeG,EAAtB,kC,4CAAO,WAAkCC,GAAlC,mBAAAzB,EAAA,sEAEkBH,IAAiBiB,KAAK,CAC3CC,SAAU,CACRU,UACAT,UAAW,CAAEC,KAAM,OAErBC,KAAM,CAAC,eAPJ,cAECQ,EAFD,OAWCC,EAAMD,EAASP,KAAKS,KAAI,SAACtB,GAAD,OAASA,EAAItB,OAXtC,SAagBa,IAAiBgC,QAAQ,CAC5CC,KAAMH,EACNI,cAAc,EACdC,aAAa,EACbC,QAAQ,IAjBL,cAaCtB,EAbD,yBAoBEA,EAAOuB,KAAKN,KAAI,SAACO,GAAD,OAASA,EAAI7B,QApB/B,4C,sBAuBA,SAAe8B,EAAtB,kC,4CAAO,WAA4Bf,GAA5B,SAAArB,EAAA,sEACQH,IAAiBI,IAAIoB,EAAI,CACpCW,aAAa,EACbC,QAAQ,IAHL,oF,sBAOA,SAAeI,GAAtB,qC,8CAAO,WAAwBZ,EAASzF,GAAjC,uBAAAgE,EAAA,6DACGE,EAAelE,EAAfkE,KAAMoC,EAAStG,EAATsG,KADT,kBAKkBvG,EAAwBC,GAL1C,UAKCuG,EALD,uCASgB7E,IAThB,OASD6E,EATC,qBAaGjC,EAAM,CACVtB,IAAKZ,aACLqD,UACAvB,OACAqC,WACAvB,WAAW,IAAIwB,MAAOC,cACtBC,aAAc,CACZC,KAAM,CACJC,aAAcN,EACdlC,KAAMpE,KAtBT,UA2BkB6D,IAAiBW,IAAIF,GA3BvC,eA2BGK,EA3BH,yBA8BIyB,EAAazB,EAAOU,KA9BxB,kCAgCH9E,QAAQsG,MAAR,MAhCG,2D,sBAoCA,SAAeC,GAAtB,mC,8CAAO,WAA2BC,GAA3B,eAAA/C,EAAA,sEAEaH,IAAiBI,IAAI8C,EAAM/D,KAFxC,cAECsB,EAFD,yBAIET,IAAiBmD,OAAO1C,IAJ1B,4C,sBAWA,SAAe2C,GAAtB,mC,8CAAO,WAAkCxB,GAAlC,mBAAAzB,EAAA,sEAEkBF,IAAiBgB,KAAK,CAC3CC,SAAU,CACRU,UACAT,UAAW,CAAEC,KAAM,OAErBC,KAAM,CAAC,eAPJ,cAECQ,EAFD,OAWCC,EAAMD,EAASP,KAAKS,KAAI,SAACtB,GAAD,OAASA,EAAItB,OAXtC,SAagBc,IAAiB+B,QAAQ,CAC5CC,KAAMH,EACNI,cAAc,EACdC,aAAa,EACbC,QAAQ,IAjBL,cAaCtB,EAbD,yBAoBEA,EAAOuB,KAAKN,KAAI,SAACO,GAAD,OAASA,EAAI7B,QApB/B,4C,sBAuBA,SAAe4C,GAAtB,mC,8CAAO,WAA4B7B,GAA5B,SAAArB,EAAA,sEACQF,IAAiBG,IAAIoB,EAAI,CACpCW,aAAa,EACbC,QAAQ,IAHL,oF,sBAOA,SAAekB,GAAtB,qC,8CAAO,WAAwB1B,EAASzF,GAAjC,qBAAAgE,EAAA,6DACGE,EAAelE,EAAfkE,KAAMoC,EAAStG,EAATsG,KADT,SAKGhC,EAAM,CACVtB,IAAKZ,aACLqD,UACAvB,OACAc,WAAW,IAAIwB,MAAOC,cACtBC,aAAc,CACZC,KAAM,CACJC,aAAcN,EACdlC,KAAMpE,KAbT,SAkBkB8D,IAAiBU,IAAIF,GAlBvC,cAkBGK,EAlBH,yBAqBIuC,GAAavC,EAAOU,KArBxB,gCAuBH9E,QAAQsG,MAAR,MAvBG,0D,sBA2BA,SAAeO,GAAtB,mC,8CAAO,WAA2BC,GAA3B,eAAArD,EAAA,sEAEaF,IAAiBG,IAAIoD,EAAMrE,KAFxC,cAECsB,EAFD,yBAIER,IAAiBkD,OAAO1C,IAJ1B,4C,sBAWA,SAAegD,GAAtB,mC,8CAAO,WAAiC7B,GAAjC,mBAAAzB,EAAA,sEACkBJ,IAAgBkB,KAAK,CAC1CC,SAAU,CACRU,UACAT,UAAW,CAAEC,KAAM,OAErBC,KAAM,CAAC,eANJ,cACCQ,EADD,OAUCC,EAAMD,EAASP,KAAKS,KAAI,SAACtB,GAAD,OAASA,EAAItB,OAVtC,SAYgBY,IAAgBiC,QAAQ,CAC3CC,KAAMH,EACNI,cAAc,IAdX,cAYCpB,EAZD,yBAiBEA,EAAOuB,KAAKN,KAAI,SAACO,GAAD,OAASA,EAAI7B,QAjB/B,4C,sBAoBA,SAAeiD,GAAtB,mC,8CAAO,WAA2BlC,GAA3B,SAAArB,EAAA,sEACQJ,IAAgBK,IAAIoB,GAD5B,oF,sBAIA,SAAemC,GAAtB,mC,8CAAO,WAAuBC,GAAvB,eAAAzD,EAAA,+EAGkBJ,IAAgBY,IAAhB,eAChBiD,EADgB,CAEnBzE,IAAKZ,aACL4C,WAAW,IAAIwB,MAAOC,cACtBiB,WAAW,KAPV,cAGG/C,EAHH,yBAWI4C,GAAY5C,EAAOU,KAXvB,gCAaH9E,QAAQsG,MAAR,MAbG,0D,sBAiBA,SAAec,GAAtB,mC,8CAAO,WAA0BF,GAA1B,mBAAAzD,EAAA,+EAGoBuD,GAAYE,EAAKzE,KAHrC,uBAGKuB,EAHL,EAGKA,KAHL,SAKkBX,IAAgBY,IAAhB,eAChBiD,EADgB,CAEnBlD,UAPC,cAKGI,EALH,yBAWI4C,GAAY5C,EAAOU,KAXvB,kCAaH9E,QAAQsG,MAAR,MAbG,2D,sBAiBA,SAAee,GAAtB,mC,8CAAO,WAA0BH,GAA1B,eAAAzD,EAAA,sEAEaJ,IAAgBK,IAAIwD,EAAKzE,KAFtC,cAECsB,EAFD,yBAIEV,IAAgBoD,OAAO1C,IAJzB,4C,sBC1XA,I,oGCQDuD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,QAEXC,KAAM,CACJC,MAAO,iCAII,SAASC,GAAT,GAAiC,IAAZ3C,EAAW,EAAXA,QAC5B4C,EAAUR,KAD6B,EDsEV,SAACpC,EAAS6C,GAAkB,IAAD,EAChCC,oBAAS,GADuB,mBACvDC,EADuD,KAC9CC,EAD8C,OAE5BF,oBAAS,GAFmB,mBAEvDG,EAFuD,KAE5CC,EAF4C,OAGtCJ,mBAASD,GAH6B,mBAGvDlE,EAHuD,KAGjDwE,EAHiD,OAItBL,mBAAS,GAJa,mBAIvDM,EAJuD,KAIzCC,EAJyC,KA0B9D,OApBAC,qBAAU,WAAM,4CACd,sBAAA/E,EAAA,6DACE2E,GAAa,GACbF,GAAW,GAFb,cAIIG,EAJJ,SAIkBpD,EAAmBC,GAJrC,oFAMIlF,QAAQsG,MAAR,MACA4B,GAAW,GAPf,QASEE,GAAa,GATf,2DADc,uBAAC,WAAD,wBAadK,KACC,CAACvD,EAASoD,IAMN,CAACzE,EAAMsE,EAAWF,EAJzB,WACEM,EAAgBtC,KAAKyC,MAAMC,aC1FgBC,CAC3C1D,EACA,IAL2C,mBAGtC2D,EAHsC,KAG9BV,EAH8B,KAGnBF,EAHmB,KAGVa,EAHU,KAQvCC,EAAmB,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,2DACpBwF,EAAUC,SAASC,eAAe,qBAC5BC,QAASH,EAAQG,MAAM,GAFT,gCAGlBtD,GAASZ,EAAS+D,EAAQG,MAAM,IAHd,OAIxBN,IAJwB,2CAAH,sDAQnBO,EAAoB,SAAC7C,GAAD,8CAAW,WAAOwC,GAAP,SAAAvF,EAAA,sEAE7B8C,GAAYC,GAFiB,OAInCsC,IAJmC,2CAAX,uDA+B1B,OACE,oCAGE,kBAACQ,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,GAAInK,UAAU,MAAMoK,QAAQ,YACnD,kBAACJ,EAAA,EAAD,CAAMC,MAAI,GACR,2BACExD,KAAK,OACL4D,OAAO,UACP7E,GAAG,mBACH8E,UAAW9B,EAAQL,UACnBoC,SAAUd,IAEZ,2BAAOe,QAAQ,oBACb,kBAACC,GAAA,EAAD,CAAYnC,MAAM,UAAUoC,UAAU,QACpC,kBAAC,KAAD,UAQR,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACQ,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,GAAA,EAAD,CAAUC,WAAY,IAAKC,KAAM,GAC/B,kBAACC,GAAA,EAAD,CACEC,IAAI,kBACJF,KAAM,EACNG,MAAO,CAAEC,OAAQ,SAEjB,kBAACC,GAAA,EAAD,CACEV,UAAU,MACVpC,MAAM,UACN4C,MAAO,CAAEG,gBAAiB,YAH5B,SAMIxC,GAA+B,IAAlBU,EAAO+B,OAElB,GADA,yBAEHzC,EAAY,gBAAkB,GAC9BF,EAAU,0BAA4B,KAI1CY,GACCA,EAAOxD,KAAI,SAACmB,GAAD,OACT,kBAAC8D,GAAA,EAAD,CAAcC,IAAK/D,EAAM/D,IAAK4H,KAAM,GAClC,yBACEQ,IAAKC,IAAIC,gBACPvE,EAAML,aAAaC,KAAKvC,MAE1BmH,IAAKxE,EAAM7C,OAEb,kBAACsH,GAAA,EAAD,CACEC,MAAO1E,EAAM7C,KACbwH,SACE3E,EAAMR,SAAN,UACOQ,EAAMR,SAASjF,IADtB,aAC8ByF,EAAMR,SAAShF,KACzC,cAENoK,WACE,kBAACrB,GAAA,EAAD,CACEH,UAAW9B,EAAQH,KACnB0D,QAAShC,EAAkB7C,IAE3B,kBAAC,KAAD,iB,wBC3HlBc,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,QAEXC,KAAM,CACJC,MAAO,iCAII,SAAS0D,GAAT,GAAiC,IAAZpG,EAAW,EAAXA,QAC5B4C,EAAUR,KAD6B,EFoGV,SAACpC,EAAS6C,GAAkB,IAAD,EAChCC,oBAAS,GADuB,mBACvDC,EADuD,KAC9CC,EAD8C,OAE5BF,oBAAS,GAFmB,mBAEvDG,EAFuD,KAE5CC,EAF4C,OAGtCJ,mBAASD,GAH6B,mBAGvDlE,EAHuD,KAGjDwE,EAHiD,OAItBL,mBAAS,GAJa,mBAIvDM,EAJuD,KAIzCC,EAJyC,KA0B9D,OApBAC,qBAAU,WAAM,4CACd,sBAAA/E,EAAA,6DACE2E,GAAa,GACbF,GAAW,GAFb,cAIIG,EAJJ,SAIkB3B,GAAmBxB,GAJrC,oFAMIlF,QAAQsG,MAAR,MACA4B,GAAW,GAPf,QASEE,GAAa,GATf,2DADc,uBAAC,WAAD,wBAadK,KACC,CAACvD,EAASoD,IAMN,CAACzE,EAAMsE,EAAWF,EAJzB,WACEM,EAAgBtC,KAAKyC,MAAMC,aExHgB4C,CAC3CrG,EACA,IAL2C,mBAGtCsG,EAHsC,KAG9BrD,EAH8B,KAGnBF,EAHmB,KAGVa,EAHU,KAQvCC,EAAmB,uCAAG,WAAOC,GAAP,eAAAvF,EAAA,2DACpBwF,EAAUC,SAASC,eAAe,qBAC5BC,QAASH,EAAQG,MAAM,GAFT,gCAGlBxC,GAAS1B,EAAS+D,EAAQG,MAAM,IAHd,OAIxBN,IAJwB,2CAAH,sDAQnB2C,EAAoB,SAAC3E,GAAD,8CAAW,WAAOkC,GAAP,SAAAvF,EAAA,sEAE7BoD,GAAYC,GAFiB,OAInCgC,IAJmC,2CAAX,uDAO1B,OACE,oCAGE,kBAACQ,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,GAAInK,UAAU,MAAMoK,QAAQ,YACnD,kBAACJ,EAAA,EAAD,CAAMC,MAAI,GACR,2BACExD,KAAK,OACL4D,OAAO,UACP7E,GAAG,mBACH8E,UAAW9B,EAAQL,UACnBoC,SAAUd,IAEZ,2BAAOe,QAAQ,oBACb,kBAACC,GAAA,EAAD,CAAYnC,MAAM,UAAUoC,UAAU,QACpC,kBAAC,KAAD,UAQR,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACQ,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,GAAA,EAAD,CAAUC,WAAY,IAAKC,KAAM,GAC/B,kBAACC,GAAA,EAAD,CACEC,IAAI,kBACJF,KAAM,EACNG,MAAO,CAAEC,OAAQ,SAEjB,kBAACC,GAAA,EAAD,CACEV,UAAU,MACVpC,MAAM,UACN4C,MAAO,CAAEG,gBAAiB,YAH5B,SAMIxC,GAA+B,IAAlBqD,EAAOZ,OAElB,GADA,yBAEHzC,EAAY,gBAAkB,GAC9BF,EAAU,0BAA4B,KAG1CuD,GACCA,EAAOnG,KAAI,SAACyB,GAAD,OACT,kBAACwD,GAAA,EAAD,CAAcC,IAAKzD,EAAMrE,IAAK4H,KAAM,GAClC,2BAAOI,OAAQ,IAAKiB,UAAU,GAC5B,4BACE3F,KAAMe,EAAMX,aAAaC,KAAKC,aAC9BwE,IAAKC,IAAIC,gBACPjE,EAAMX,aAAaC,KAAKvC,QAG5B,+EAIF,kBAACoH,GAAA,EAAD,CACEC,MAAOpE,EAAMnD,KACbyH,WACE,kBAACrB,GAAA,EAAD,CACEH,UAAW9B,EAAQH,KACnB0D,QAASI,EAAkB3E,IAE3B,kBAAC,KAAD,iB,uIC1FT,SAAS6E,GAAT,GAAgC,IAAZzG,EAAW,EAAXA,QAAW,EH4CV,SAACA,EAAS6C,GAAkB,IAAD,EAC/BC,oBAAS,GADsB,mBACtDC,EADsD,KAC7CC,EAD6C,OAE3BF,oBAAS,GAFkB,mBAEtDG,EAFsD,KAE3CC,EAF2C,OAGrCJ,mBAASD,GAH4B,mBAGtDlE,EAHsD,KAGhDwE,EAHgD,OAIrBL,mBAAS,GAJY,mBAItDM,EAJsD,KAIxCC,EAJwC,KA0B7D,OApBAC,qBAAU,WAAM,4CACd,sBAAA/E,EAAA,6DACE2E,GAAa,GACbF,GAAW,GAFb,cAIIG,EAJJ,SAIkBtB,GAAkB7B,GAJpC,oFAMIlF,QAAQsG,MAAR,MACA4B,GAAW,GAPf,QASEE,GAAa,GATf,2DADc,uBAAC,WAAD,wBAadK,KACC,CAACvD,EAASoD,IAMN,CAACzE,EAAMsE,EAAWF,EAJzB,WACEM,EAAgBtC,KAAKyC,MAAMC,aGlEeiD,CAC1C1G,EACA,IAH0C,mBACrC2G,EADqC,KAC9B1D,EAD8B,KACnBF,EADmB,KACVa,EADU,OAKpBd,oBAAS,GALW,mBAKrC8D,EALqC,KAK/BC,EAL+B,OAMQ/D,oBAAS,GANjB,mBAMrCgE,EANqC,KAMjBC,EANiB,KAgBtCC,EAAc,WAClBH,GAAQ,IAGJI,EAAa,uCAAG,sBAAA1I,EAAA,sEAEdwD,GAAQ,CACZ/B,UACAkH,YAAaJ,IAJK,OAOpBE,IAEApD,IAToB,2CAAH,qDAYbuD,EAAqB,SAACnF,GAAD,8CAAU,WAAO8B,GAAP,SAAAvF,EAAA,sEAC7B2D,GAAW,eACZF,EADW,CAEdC,UAAW6B,EAAMsD,OAAOC,WAHS,OAKnCzD,IALmC,2CAAV,uDAQrB0D,EAAmB,SAACtF,GAAD,8CAAU,WAAO8B,GAAP,SAAAvF,EAAA,sEAE3B4D,GAAWH,GAFgB,OAIjC4B,IAJiC,2CAAV,uDAOzB,OACE,oCAGE,kBAACQ,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,GAAInK,UAAU,MAAMoK,QAAQ,YACnD,kBAACJ,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACQ,GAAA,EAAD,CACEnC,MAAM,UACNoC,UAAU,OACVqB,QA5Cc,WACtBU,GAAQ,KA6CA,kBAAC,KAAD,SAMN,kBAACU,GAAA,EAAD,CAAQX,KAAMA,EAAMY,QAASR,EAAaS,WAAS,GACjD,kBAACC,GAAA,EAAD,CAAapC,MAAO,CAAEG,gBAAiB,YAAvC,YAGA,kBAACkC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTjI,GAAG,cACHkI,MAAM,cACNL,WAAS,EACT9C,SAlEO,SAACb,GAChBiD,EAAsBjD,EAAMsD,OAAOW,WAoE/B,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQ9B,QAASa,EAAatE,MAAM,WAApC,UAGA,kBAACuF,GAAA,EAAD,CAAQ9B,QAASc,EAAevE,MAAM,WAAtC,cAQJ,kBAAC0B,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACQ,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAACkD,GAAA,EAAD,CACEC,UACE,kBAAC3C,GAAA,EAAD,CACE9C,MAAM,UACN4C,MAAO,CAAEG,gBAAiB,YAF5B,QAKIxC,GAA8B,IAAjB0D,EAAMjB,OAEjB,GADA,yBAEHzC,EAAY,gBAAkB,GAC9BF,EAAU,yBAA2B,KAIzC4D,GACCA,EAAMxG,KAAI,SAAC6B,GAAD,OACR,kBAACoG,GAAA,EAAD,CAAU/C,IAAKrD,EAAKzE,KAClB,kBAAC8K,GAAA,EAAD,CACEC,KAAK,QACL3D,SAAUwC,EAAmBnF,GAC7BqF,QAASrF,EAAKC,YAEhB,kBAACsG,GAAA,EAAD,CAAcC,QAASxG,EAAKkF,cAC5B,kBAACuB,GAAA,EAAD,KACE,kBAAC5D,GAAA,EAAD,CAAYsB,QAASmB,EAAiBtF,IACpC,kBAAC,KAAD,gBCpIP,SAAS0G,KAAe,IAC/B9I,EAAO+I,cAAP/I,GAD8B,EJ8BP,SAACA,EAAIiD,GAAkB,IAAD,EACrBC,oBAAS,GADY,mBAC5CC,EAD4C,KACnCC,EADmC,OAEjBF,oBAAS,GAFQ,mBAE5CG,EAF4C,KAEjCC,EAFiC,OAG3BJ,mBAASD,GAHkB,mBAG5ClE,EAH4C,KAGtCwE,EAHsC,OAIXL,mBAAS,GAJE,mBAI5CM,EAJ4C,KAI9BC,EAJ8B,KA0BnD,OApBAC,qBAAU,WAAM,4CACd,sBAAA/E,EAAA,6DACE2E,GAAa,GACbF,GAAW,GAFb,cAIIG,EAJJ,SAIkBxD,EAAaC,GAJ/B,oFAMI9E,QAAQsG,MAAR,MACA4B,GAAW,GAPf,QASEE,GAAa,GATf,2DADc,uBAAC,WAAD,wBAadK,KACC,CAAC3D,EAAIwD,IAMD,CAACzE,EAAMsE,EAAWF,EAJzB,WACEM,EAAgBtC,KAAKyC,MAAMC,aIjDOmF,CAAgBhJ,GAJhB,mBAI7BE,EAJ6B,KAItBmD,EAJsB,KAIXF,EAJW,KAMpC,OACE,6BACGA,GAAW,yDACXE,GAAa,4CACZA,IAAcnD,GACd,kBAAC+I,EAAA,EAAD,CAAYC,QAAQ,aAApB,mBAEDhJ,GACC,kBAACsE,EAAA,EAAD,CAAME,WAAS,EAACyE,QAAS,GACvB,kBAAC3E,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACsE,EAAA,EAAD,CAAYC,QAAQ,MAAMhJ,EAAMoH,cAElC,kBAACT,GAAD,CAAUzG,QAASJ,IACnB,kBAAC+C,GAAD,CAAW3C,QAASJ,IACpB,kBAACwG,GAAD,CAAWpG,QAASJ,M,yBCbf,SAASoJ,KAAa,IAC3BC,EAAQC,cAARD,IAD0B,ELNR,SAACpG,GAAkB,IAAD,EACdC,oBAAS,GADK,mBACrCC,EADqC,KAC5BC,EAD4B,OAEVF,oBAAS,GAFC,mBAErCG,EAFqC,KAE1BC,EAF0B,OAGpBJ,mBAASD,GAHW,mBAGrClE,EAHqC,KAG/BwE,EAH+B,OAIJL,mBAAS,GAJL,mBAIrCM,EAJqC,KAIvBC,EAJuB,KA0B5C,OApBAC,qBAAU,WAAM,4CACd,sBAAA/E,EAAA,6DACE2E,GAAa,GACbF,GAAW,GAFb,cAIIG,EAJJ,SAIkB/D,IAJlB,oFAMItE,QAAQsG,MAAR,MACA4B,GAAW,GAPf,QASEE,GAAa,GATf,2DADc,uBAAC,WAAD,wBAadK,KACC,CAACH,IAMG,CAACzE,EAAMsE,EAAWF,EAJzB,WACEM,EAAgBtC,KAAKyC,MAAMC,aKfQ0F,CAAa,IAFhB,mBAE3BC,EAF2B,KAEnBnG,EAFmB,KAERF,EAFQ,KAIlC,OACE,6BACE,kBAACqB,EAAA,EAAD,CAAME,WAAS,EAACyE,QAAS,GACvB,kBAAC3E,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACsE,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAEF,kBAAC1E,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACZxB,GAAW,yDACXE,GAAa,4CACZA,GAA+B,IAAlBmG,EAAO1D,QACpB,kBAACmD,EAAA,EAAD,CAAYC,QAAQ,aAApB,wBAIDM,EAAO1D,OAAS,GACf,kBAACX,GAAA,EAAD,CAAOC,UAAW,GAChB,kBAACkD,GAAA,EAAD,KACGkB,EAAOjJ,KAAI,SAACL,GAAD,OACV,kBAACsI,GAAA,EAAD,CACE/C,IAAKvF,EAAMvC,IACX8L,QAAM,EACNvE,UAAWwE,IACXC,GAAE,UAAKN,EAAL,YAAYnJ,EAAMvC,MAEpB,kBAACgL,GAAA,EAAD,CACEC,QAAS1I,EAAMoH,YACfsC,UAAW1J,EAAM2J,UAEnB,kBAAChB,GAAA,EAAD,KACE,kBAAC5D,GAAA,EAAD,CAAYnC,MAAM,WAChB,kBAAC,KAAD,iBC5CT,SAASgH,KAAe,IAC7BC,EAAST,cAATS,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAMA,GACjB,kBAACX,GAAD,OAEF,kBAAC,IAAD,CAAOW,KAAI,UAAKA,EAAL,SACT,kBAACjB,GAAD,Q,wDCZD,SAAemB,KAAtB,gC,8CAAO,4BAAAtL,EAAA,sEACkBuL,MACrB,+CAFG,cACC7J,EADD,yBAIEA,EAAS8J,QAJX,4C,sBAcA,SAAeC,GAAtB,mC,8CAAO,WAAmChK,GAAnC,eAAAzB,EAAA,sEACkBuL,MAAM,8CAAD,OACoB9J,IAF3C,cACCC,EADD,yBAIEA,EAAS8J,QAJX,4C,sBCKP,IAAM3H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2H,KAAM,GAGNZ,OAAQ,CACNa,YAAa5H,EAAMyG,QAAQ,QAIhB,SAASoB,KACtB,IAAMvH,EAAUR,KADa,EAOWU,mBACtCxF,GAR2B,mBAOtB8M,EAPsB,KAORC,EAPQ,KAW7B/G,qBAAU,WAAM,4CACd,4BAAA/E,EAAA,+EAE2BD,IAF3B,OAEU2B,EAFV,OAGIoK,EAAgBpK,GAHpB,gDAKInF,QAAQsG,MAAR,MALJ,0DADc,uBAAC,WAAD,wBASdkJ,KACC,IArB0B,MAuBOxH,mBAAS,CAC3CyH,SAAS,EACTC,QAAS,GACT/N,KAAK,IA1BsB,mBAuBtBgO,EAvBsB,KAuBVC,EAvBU,KA6BvBC,EAAe,uCAAG,WAAO7G,GAAP,uBAAAvF,EAAA,6DACtBmM,EAAc,CACZH,SAAS,EACTC,QAAS,oCAHW,kBAQCX,KARD,aAQdT,EARc,QAST1D,OAAS,GATA,wBAUlBgF,EAAc,CACZF,QAAQ,qBAAD,OAAuBpB,EAAO1D,OAA9B,8BAGTgF,EAAc,CACZF,QAAS,yCAfO,UAkBYhQ,QAAQoQ,IACpCxB,EAAOjJ,KAAI,SAACL,GAAD,OAAWD,EAASC,OAnBf,eAkBZ+K,EAlBY,OAsBlBH,EAAc,CACZF,QAAS,gDAGLM,EAAWD,EAAgB1K,KAAI,SAACL,GAAD,OAAWA,EAAMF,MA1BpC,UA4BEpF,QAAQoQ,IAC1BE,EAAS3K,KAAI,SAACH,GAAD,OAAagK,GAAoBhK,OA7B9B,eA4BZ2G,EA5BY,iBAgCZnM,QAAQoQ,IAAIjE,EAAMoE,OAAO5K,KAAI,SAAC6B,GAAD,OAAUD,GAAQC,OAhCnC,eAkClB0I,EAAc,CACZF,QAAS,wCAnCO,UAuCY9L,EAAmB,eAC5C0L,EAD2C,CAE9C5M,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KA3CA,QAuCZoN,EAvCY,OA+ClBX,EAAgBW,GAEhBN,EAAc,CACZH,SAAS,EACTC,QAAQ,UAAD,OAAYK,EAAgBnF,OAA5B,8BAnDS,wBAsDlBgF,EAAc,CACZH,SAAS,EACTC,QAAS,iDAxDO,0DA4DpB1P,QAAQsG,MAAR,MAEAsJ,EAAc,CACZH,SAAS,EACTnJ,OAAO,EACPoJ,QACE,4DAlEgB,0DAAH,sDAuEfS,EAAa,uCAAG,WAAOnH,GAAP,eAAAvF,EAAA,sEAElBmM,EAAc,CACZH,SAAS,EACTC,QAAS,uCAGXE,EAAc,CACZF,QAAS,kCARO,SAYY9L,EAAmB,eAC5C0L,EAD2C,CAE9C5M,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KAhBA,OAYZoN,EAZY,OAoBlBX,EAAgBW,GAEhBN,EAAc,CACZH,SAAS,EACTC,QAAS,kDAxBO,kDA2BlBE,EAAc,CACZH,SAAS,EACTnJ,OAAO,EACPoJ,QACE,+DA/Bc,0DAAH,sDAoCbU,EAAa,uCAAG,WAAOpH,GAAP,eAAAvF,EAAA,sEAElBmM,EAAc,CACZH,SAAS,EACTC,QAAS,4BAJO,SAQZxL,IARY,cAUlB0L,EAAc,CACZF,QAAS,iDAXO,SAeY9L,EAAmB,eAC5C0L,EAD2C,CAE9C5M,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KAnBA,OAeZoN,EAfY,OAuBlBX,EAAgBW,GAEhBN,EAAc,CACZH,SAAS,EACTC,QAAS,uCA3BO,kDA8BlBE,EAAc,CACZH,SAAS,EACTnJ,OAAO,EACPoJ,QACE,wDAlCc,0DAAH,sDAuCnB,OACE,yBAAK9F,UAAW9B,EAAQqH,MACtB,kBAAC7F,EAAA,EAAD,CAAME,WAAS,EAACyE,QAAS,GACvB,kBAAC3E,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAACsE,EAAA,EAAD,CAAYC,QAAQ,MAApB,SAEF,kBAAC1E,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAAC0D,GAAA,EAAD,CACEa,QAAQ,YACRpG,MAAM,UACNgC,UAAW9B,EAAQyG,OACnB8B,UAAW,kBAAC,KAAD,MACXhF,QAASwE,EACTS,SAAUhB,EAAa5M,kBANzB,aAWF,kBAAC4G,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAAC0D,GAAA,EAAD,CACEa,QAAQ,YACRpG,MAAM,UACNgC,UAAW9B,EAAQyG,OACnB8B,UAAW,kBAAC,KAAD,MACXhF,QAAS8E,EACTG,SAAUhB,EAAa1M,gBANzB,yBAWF,kBAAC0G,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACb,kBAAC0D,GAAA,EAAD,CACEa,QAAQ,YACRpG,MAAM,UACNgC,UAAW9B,EAAQyG,OACnB8B,UAAW,kBAAC,KAAD,MACXhF,QAAS+E,EACTE,SAAUhB,EAAaxM,gBANzB,WAWF,kBAACwG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,IACZkG,EAAWF,SAAW,kBAACc,GAAA,EAAD,CAAkBC,KAAM,KAC9C,KACAb,EAAWD,SAAW,8BAAOC,EAAWD,YC7OnD,IAAMpI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiJ,KAAM,CACJC,WAAYlJ,EAAMyG,QAAQ,QAOf,SAAS0C,KACtB,IAAM7I,EAAUR,KAEhB,OACE,kBAAC,IAAD,CAAQsJ,SAAS,KACf,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,0BAAMpH,UAAW9B,EAAQ2I,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO3B,OAAK,EAACD,KAAK,KAChB,kBAACQ,GAAD,OAEF,kBAAC,IAAD,CAAOR,KAAK,WACV,kBAAC,GAAD,W,yBC7BdoC,IAASC,OAEP,kBAACP,GAAD,MAEAzH,SAASC,eAAe,SAS1BgI,KAAgB,CACdC,UAAW,a,wLCXP9J,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2H,KAAM,CACJkC,SAAU,GAEZC,WAAY,CACVlC,YAAa5H,EAAMyG,QAAQ,IAE7B/C,MAAO,CACLmG,SAAU,OAIC,SAASP,IACtB,IAAMhJ,EAAUR,IACViK,EACJC,EAAQC,SAAW,mBAAmBC,KAAKtQ,UAAUuQ,WAHxB,EAIP3J,oBAAS,GAJF,mBAIxB8D,EAJwB,KAIlBC,EAJkB,KAMzB6F,EAAe,SAAC3E,GAAD,OAAW,SAACjE,KAE7BA,GACe,YAAfA,EAAMjD,MACS,QAAdiD,EAAMuB,KAA+B,UAAdvB,EAAMuB,MAK5BuB,IAASmB,GACXlB,EAAQkB,KAIZ,OACE,yBAAKrD,UAAW9B,EAAQqH,MACtB,kBAAC,IAAD,CAAQ5N,SAAS,UACf,kBAAC,IAAD,CACEsQ,OAAO,OACP/F,KAAMA,EACNgG,OAAQF,GAAa,GACrBlF,QAASkF,GAAa,GACtBG,2BAA4BR,EAC5BS,iBAAkBT,GAElB,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/D,KAAK,QACL5D,UAAW9B,EAAQwJ,WACnB1J,MAAM,UACNqK,aAAW,OACX5G,QAASuG,GAAa,IAEtB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAY5D,QAAQ,KAAKpE,UAAW9B,EAAQoD,OAA5C,qB,kDCjEV,6IAaA,SAASgH,EAAaC,GAAQ,IACpBxK,EAAsBwK,EAAtBxK,KAAM+F,EAAgByE,EAAhBzE,QAASe,EAAO0D,EAAP1D,GAEjB2D,EAAaC,IAAMC,SACvB,kBACED,IAAME,YAAW,SAACC,EAAWC,GAAZ,OACf,kBAAC,IAAD,eAAMhE,GAAIA,EAAIgE,IAAKA,GAASD,SAEhC,CAAC/D,IAGH,OACE,4BACE,kBAAC,IAAD,CAAUF,QAAM,EAACvE,UAAWoI,GACzBzK,EAAO,kBAAC,IAAD,KAAeA,GAAuB,KAC9C,kBAAC,IAAD,CAAc+F,QAASA,MAY/B,IAAMpG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2H,KAAM,CACJkC,SAAU,EACVqB,MAAO,SAII,SAASC,IACtB,IAAM7K,EAAUR,IAEhB,OACE,yBAAKsC,UAAW9B,EAAQqH,MACtB,kBAAC,IAAD,KACE,kBAAC+C,EAAD,CAAczD,GAAG,IAAIf,QAAQ,OAAO/F,KAAM,kBAAC,IAAD,QAC1C,kBAACuK,EAAD,CACEzD,GAAG,UACHf,QAAQ,SACR/F,KAAM,kBAAC,IAAD,a","file":"static/js/main.acbff88a.chunk.js","sourcesContent":["import * as EXIF from 'exif-js';\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n  let dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction === 'S' || direction === 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nfunction parseGeolocationTags(tags) {\n  const {\n    GPSLatitude,\n    GPSLatitudeRef,\n    GPSLongitude,\n    GPSLongitudeRef,\n  } = tags;\n\n  if (\n    !GPSLatitude ||\n    !GPSLatitudeRef ||\n    !GPSLongitude ||\n    !GPSLongitudeRef\n  ) {\n    return null;\n  }\n\n  const latDegree = GPSLatitude[0];\n  const latMinute = GPSLatitude[1];\n  const latSecond = GPSLatitude[2];\n  const latDirection = GPSLatitudeRef;\n\n  const lonDegree = GPSLongitude[0];\n  const lonMinute = GPSLongitude[1];\n  const lonSecond = GPSLongitude[2];\n  const lonDirection = GPSLongitudeRef;\n\n  const lat = convertDMSToDD(\n    latDegree,\n    latMinute,\n    latSecond,\n    latDirection,\n  );\n\n  const lng = convertDMSToDD(\n    lonDegree,\n    lonMinute,\n    lonSecond,\n    lonDirection,\n  );\n\n  return {\n    lat,\n    lng,\n    origin: 'EXIF',\n  };\n}\n\nexport const getGeolocationFromImage = (imageFile) => {\n  return new Promise((resolve, reject) => {\n    EXIF.getData(imageFile, function () {\n      const allMetaData = EXIF.getAllTags(this);\n      console.log('==>> EXIF ALL', allMetaData);\n      resolve(parseGeolocationTags(allMetaData));\n    });\n  });\n};\n\nexport const getGeoloacationFromDevice = () => {\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        // success\n        (position) => {\n          console.log(position);\n          resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            origin: 'DEVICE',\n          });\n        },\n        // error\n        (err) => {\n          reject(err);\n          // error.code can be:\n          //   0: unknown error\n          //   1: permission denied\n          //   2: position unavailable (error response from location provider)\n          //   3: timed out\n        },\n        // options\n        {\n          timeout: 5000,\n          // enableHighAccuracy: true, // slower to resolve and uses more battery\n        },\n      );\n    } else {\n      console.log(\n        'Geolocation is not supported for this Browser/OS.',\n      );\n      reject();\n    }\n  });\n};\n","import PouchDB from 'pouchdb';\nimport PouchFindPlugin from 'pouchdb-find';\nimport * as shortid from 'shortid';\nimport {\n  getGeolocationFromImage,\n  getGeoloacationFromDevice,\n} from '../utils/geolocation';\n\nshortid.characters(\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@',\n);\n\n// enable queries\n// https://pouchdb.com/guides/mango-queries.html\nPouchDB.plugin(PouchFindPlugin);\n\nPouchDB.on('destroyed', function (dbName) {\n  // called whenever a db is destroyed.\n  console.log('==>> POUCHEDB destroyed', dbName);\n});\n\nconst SYNC_METADATA = 'sync-metadata';\nconst ORDERS = 'orders';\nconst TASKS = 'tasks';\nconst IMAGES = 'images';\nconst VIDEOS = 'videos';\n\nexport const DEFAULT_SYNC_METADATA = {\n  _id: 'default',\n  downloadDisabled: false,\n  downloadedAt: '',\n  uploadDisabled: true,\n  uploadedAt: '',\n  deleteDisabled: true,\n  deletedAt: '',\n};\n\nlet syncMetadataStore;\nlet ordersStore;\nlet imagesStore;\nlet videosStore;\nlet tasksStore;\n\nfunction getSyncMetadataStore() {\n  if (!syncMetadataStore) {\n    syncMetadataStore = new PouchDB(SYNC_METADATA);\n  }\n  return syncMetadataStore;\n}\n\nfunction getOrdersStore() {\n  if (!ordersStore) {\n    ordersStore = new PouchDB(ORDERS);\n\n    ordersStore.createIndex({\n      index: { fields: ['createdAt'] },\n    });\n  }\n  return ordersStore;\n}\n\nfunction getTasksStore() {\n  if (!tasksStore) {\n    tasksStore = new PouchDB(TASKS);\n\n    tasksStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return tasksStore;\n}\n\nfunction getImagesStore() {\n  if (!imagesStore) {\n    imagesStore = new PouchDB(IMAGES);\n\n    imagesStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return imagesStore;\n}\n\nfunction getVideosStore() {\n  if (!videosStore) {\n    videosStore = new PouchDB(VIDEOS);\n\n    videosStore.createIndex({\n      index: { fields: ['createdAt', 'orderId'] },\n    });\n  }\n  return videosStore;\n}\n\n// ####################################\n// SYNC METADATA STORE\n// ####################################\n\nexport async function getSyncMetadata() {\n  try {\n    return await getSyncMetadataStore().get('default');\n  } catch (err) {\n    if (err && err.name === 'not_found') {\n      return DEFAULT_SYNC_METADATA;\n    }\n  }\n}\n\nexport async function updateSyncMetadata(data) {\n  const previous = await getSyncMetadata();\n  const doc =\n    previous && previous._rev\n      ? { ...data, _rev: previous._rev }\n      : data;\n\n  // update\n  await getSyncMetadataStore().put(doc);\n\n  // return updated version\n  return await getSyncMetadataStore().get('default');\n}\n\nexport async function cleanDatabases() {\n  // delete the order store\n  let result = await getOrdersStore().destroy();\n  if (result.ok) {\n    ordersStore = null;\n  }\n\n  // delete the tasks store\n  result = await getTasksStore().destroy();\n  if (result.ok) {\n    tasksStore = null;\n  }\n\n  // delete the images store\n  result = await getImagesStore().destroy();\n  if (result.ok) {\n    imagesStore = null;\n  }\n\n  // delete the videos store\n  result = await getVideosStore().destroy();\n  if (result.ok) {\n    videosStore = null;\n  }\n\n  return result;\n}\n\n// ####################################\n// ORDERS STORE\n// ####################################\n\nexport async function getOrders() {\n  const result = await getOrdersStore().find({\n    selector: {\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n  return result.docs;\n}\n\nexport async function getOrderById(id) {\n  return await getOrdersStore().get(id);\n}\n\nexport async function addOrder(order) {\n  let doc;\n  // pouch ex[ect a _id field\n  if (order.id) {\n    doc = { ...order, _id: order.id };\n  }\n  // save\n  const result = await getOrdersStore().put(doc);\n  // return the most recebt version\n  return getOrderById(result.id);\n}\n\n// ####################################\n// IMAGES STORE\n// ####################################\n\nexport async function getImagesByOrderId(orderId) {\n  // find does not return the attachments\n  const response = await getImagesStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getImagesStore().allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getImageById(id) {\n  return await getImagesStore().get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addImage(orderId, imageFile) {\n  const { name, type } = imageFile;\n\n  try {\n    // try to retrieve location from EXIF tags\n    let location = await getGeolocationFromImage(imageFile);\n\n    // ask current location from device\n    if (!location) {\n      location = await getGeoloacationFromDevice();\n    }\n\n    // inline attachment\n    const doc = {\n      _id: shortid.generate(),\n      orderId,\n      name,\n      location,\n      createdAt: new Date().toISOString(),\n      _attachments: {\n        file: {\n          content_type: type,\n          data: imageFile,\n        },\n      },\n    };\n    // save\n    const result = await getImagesStore().put(doc);\n\n    // return saved image\n    return getImageById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteImage(image) {\n  // load latest rev\n  const doc = await getImagesStore().get(image._id);\n  // remove\n  return getImagesStore().remove(doc);\n}\n\n// ####################################\n// VIDEOS STORE\n// ####################################\n\nexport async function getVideosByOrderId(orderId) {\n  // find does not return the attachments\n  const response = await getVideosStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getVideosStore().allDocs({\n    keys: ids,\n    include_docs: true,\n    attachments: true,\n    binary: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getVideoById(id) {\n  return await getVideosStore().get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addVideo(orderId, imageFile) {\n  const { name, type } = imageFile;\n\n  try {\n    // inline attachment\n    const doc = {\n      _id: shortid.generate(),\n      orderId,\n      name,\n      createdAt: new Date().toISOString(),\n      _attachments: {\n        file: {\n          content_type: type,\n          data: imageFile,\n        },\n      },\n    };\n    // save\n    const result = await getVideosStore().put(doc);\n\n    // return saved image\n    return getVideoById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteVideo(video) {\n  // load latest rev\n  const doc = await getVideosStore().get(video._id);\n  // remove\n  return getVideosStore().remove(doc);\n}\n\n// ####################################\n// TASKS STORE\n// ####################################\n\nexport async function getTasksByOrderId(orderId) {\n  const response = await getTasksStore().find({\n    selector: {\n      orderId,\n      createdAt: { $gte: null },\n    },\n    sort: ['createdAt'],\n  });\n\n  // collect all ids\n  const ids = response.docs.map((doc) => doc._id);\n\n  const result = await getTasksStore().allDocs({\n    keys: ids,\n    include_docs: true,\n  });\n\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getTaskById(id) {\n  return await getTasksStore().get(id);\n}\n\nexport async function addTask(task) {\n  try {\n    // save\n    const result = await getTasksStore().put({\n      ...task,\n      _id: shortid.generate(),\n      createdAt: new Date().toISOString(),\n      completed: false,\n    });\n\n    // return saved doc\n    return getTaskById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function updateTask(task) {\n  try {\n    // get task\n    const { _rev } = await getTaskById(task._id);\n    // save\n    const result = await getTasksStore().put({\n      ...task,\n      _rev,\n    });\n\n    // return saved doc\n    return getTaskById(result.id);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function deleteTask(task) {\n  // load latest rev\n  const doc = await getTasksStore().get(task._id);\n  // remove\n  return getTasksStore().remove(doc);\n}\n","import { useState, useEffect } from 'react';\nimport {\n  getOrders,\n  getOrderById,\n  getImagesByOrderId,\n  getVideosByOrderId,\n  getTasksByOrderId,\n} from '../../api/db';\n\nexport const useGetOrders = (initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrders());\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetOrderById = (id, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getOrderById(id));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [id, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetTasksByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getTasksByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetImagesByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getImagesByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n\nexport const useGetVideosByOrderId = (orderId, initialValue) => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(initialValue);\n  const [shouldReload, setShouldReload] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        setData(await getVideosByOrderId(orderId));\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n\n    loadData();\n  }, [orderId, shouldReload]);\n\n  function reload() {\n    setShouldReload(Date.now().valueOf());\n  }\n\n  return [data, isLoading, isError, reload];\n};\n","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n// import LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetImagesByOrderId } from './hooks';\nimport { addImage, deleteImage } from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function ImageList({ orderId }) {\n  const classes = useStyles();\n\n  const [images, isLoading, isError, reload] = useGetImagesByOrderId(\n    orderId,\n    [],\n  );\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('input-image-file');\n    if (element.files && element.files[0]) {\n      await addImage(orderId, element.files[0]);\n      reload();\n    }\n  };\n\n  const handleDeleteImage = (image) => async (event) => {\n    // delete\n    await deleteImage(image);\n    // reload images\n    reload();\n  };\n\n  // const onClickMap = (data) => (event) => {\n  //   console.log('==>> onClickMap', data);\n\n  //   if (!data) {\n  //     return;\n  //   }\n\n  //   const { lat, lng } = data;\n\n  //   if (['iPhone', 'iPad', 'iPod'].includes(navigator.platform)) {\n  //     const win = window.open(\n  //       `maps://maps.google.com/maps?daddr=${lat},${lng}&amp;ll=`,\n  //       '_top',\n  //     );\n  //     return win.focus();\n  //   }\n  //   /* default to Google */\n  //   const win = window.open(\n  //     `https://maps.google.com/maps?q=${lat},${lng}`,\n  //     '_blank',\n  //   );\n  //   return win.focus();\n  // };\n\n  return (\n    <>\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"input-image-file\"\n            className={classes.inputFile}\n            onChange={onChangeImageUpload}\n          />\n          <label htmlFor=\"input-image-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <PhotoCamera />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-image\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Images\n                {!isLoading && images.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading images)' : ''}\n              </ListSubheader>\n            </GridListTile>\n\n            {images &&\n              images.map((image) => (\n                <GridListTile key={image._id} cols={1}>\n                  <img\n                    src={URL.createObjectURL(\n                      image._attachments.file.data,\n                    )}\n                    alt={image.name}\n                  />\n                  <GridListTileBar\n                    title={image.name}\n                    subtitle={\n                      image.location\n                        ? `${image.location.lat}, ${image.location.lng}`\n                        : 'No location'\n                    }\n                    actionIcon={\n                      <IconButton\n                        className={classes.icon}\n                        onClick={handleDeleteImage(image)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Paper,\n  Grid,\n  ListSubheader,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n} from '@material-ui/core';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetVideosByOrderId } from './hooks';\nimport { addVideo, deleteVideo } from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  inputFile: {\n    display: 'none',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function VideoList({ orderId }) {\n  const classes = useStyles();\n\n  const [videos, isLoading, isError, reload] = useGetVideosByOrderId(\n    orderId,\n    [],\n  );\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('input-video-file');\n    if (element.files && element.files[0]) {\n      await addVideo(orderId, element.files[0]);\n      reload();\n    }\n  };\n\n  const handleDeleteVideo = (video) => async (event) => {\n    // delete\n    await deleteVideo(video);\n    // reload videos\n    reload();\n  };\n\n  return (\n    <>\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            id=\"input-video-file\"\n            className={classes.inputFile}\n            onChange={onChangeImageUpload}\n          />\n          <label htmlFor=\"input-video-file\">\n            <IconButton color=\"primary\" component=\"span\">\n              <VideocamIcon />\n            </IconButton>\n          </label>\n        </Grid>\n      </Grid>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <GridList cellHeight={180} cols={3}>\n            <GridListTile\n              key=\"subheader-video\"\n              cols={3}\n              style={{ height: 'auto' }}\n            >\n              <ListSubheader\n                component=\"div\"\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Videos\n                {!isLoading && videos.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading videos)' : ''}\n              </ListSubheader>\n            </GridListTile>\n            {videos &&\n              videos.map((video) => (\n                <GridListTile key={video._id} cols={1}>\n                  <video height={180} controls={false}>\n                    <source\n                      type={video._attachments.file.content_type}\n                      src={URL.createObjectURL(\n                        video._attachments.file.data,\n                      )}\n                    />\n                    <p>\n                      This browser does not support the video element\n                    </p>\n                  </video>\n                  <GridListTileBar\n                    title={video.name}\n                    actionIcon={\n                      <IconButton\n                        className={classes.icon}\n                        onClick={handleDeleteVideo(video)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))}\n          </GridList>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useGetTasksByOrderId } from './hooks';\nimport { updateTask, addTask, deleteTask } from '../../api/db';\n\nexport default function TaskList({ orderId }) {\n  const [tasks, isLoading, isError, reload] = useGetTasksByOrderId(\n    orderId,\n    [],\n  );\n  const [open, setOpen] = useState(false);\n  const [newTaskDescription, setNewTaskDescription] = useState(false);\n\n  const onChange = (event) => {\n    setNewTaskDescription(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAddTask = async () => {\n    // save task\n    await addTask({\n      orderId,\n      description: newTaskDescription,\n    });\n    // close dialog\n    handleClose();\n    // reload tasks\n    reload();\n  };\n\n  const handleCompleteTask = (task) => async (event) => {\n    await updateTask({\n      ...task,\n      completed: event.target.checked,\n    });\n    reload();\n  };\n\n  const handleDeleteTask = (task) => async (event) => {\n    // delete task\n    await deleteTask(task);\n    // reload tasks\n    reload();\n  };\n\n  return (\n    <>\n      {/* ACTIONS */}\n\n      <Grid item container xs={12} direction=\"row\" justify=\"flex-end\">\n        <Grid item>\n          <IconButton\n            color=\"primary\"\n            component=\"span\"\n            onClick={handleClickOpen}\n          >\n            <AddIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      {/* DIALOG */}\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle style={{ backgroundColor: '#E5E5E5' }}>\n          New Task\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            id=\"description\"\n            label=\"Description\"\n            fullWidth\n            onChange={onChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddTask} color=\"primary\">\n            Add Task\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* LIST */}\n\n      <Grid item xs={12}>\n        <Paper elevation={1}>\n          <List\n            subheader={\n              <ListSubheader\n                color=\"primary\"\n                style={{ backgroundColor: '#E5E5E5' }}\n              >\n                Tasks\n                {!isLoading && tasks.length === 0\n                  ? ' (No items to display)'\n                  : ''}\n                {isLoading ? ' (Loading...)' : ''}\n                {isError ? ' (Error loading tasks)' : ''}\n              </ListSubheader>\n            }\n          >\n            {tasks &&\n              tasks.map((task) => (\n                <ListItem key={task._id}>\n                  <Switch\n                    edge=\"start\"\n                    onChange={handleCompleteTask(task)}\n                    checked={task.completed}\n                  />\n                  <ListItemText primary={task.description} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={handleDeleteTask(task)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n          </List>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { useGetOrderById } from './hooks';\nimport ImageList from './ImageList';\nimport VideoList from './VideoList';\nimport TaskList from './TaskList';\n\nexport default function OrderDetail() {\n  let { id } = useParams();\n\n  // states\n  const [order, isLoading, isError] = useGetOrderById(id);\n\n  return (\n    <div>\n      {isError && <div>Something went wrong ...</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && !order && (\n        <Typography variant=\"subtitle1\">Order not found</Typography>\n      )}\n      {order && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{order.description}</Typography>\n          </Grid>\n          <TaskList orderId={id} />\n          <ImageList orderId={id} />\n          <VideoList orderId={id} />\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useGetOrders } from './hooks';\n\nexport default function OrderList() {\n  const { url } = useRouteMatch();\n  const [orders, isLoading, isError] = useGetOrders([]);\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Work Orders</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading && <div>Loading...</div>}\n          {!isLoading && orders.length === 0 && (\n            <Typography variant=\"subtitle1\">\n              No orders to display\n            </Typography>\n          )}\n          {orders.length > 0 && (\n            <Paper elevation={1}>\n              <List>\n                {orders.map((order) => (\n                  <ListItem\n                    key={order._id}\n                    button\n                    component={Link}\n                    to={`${url}/${order._id}`}\n                  >\n                    <ListItemText\n                      primary={order.description}\n                      secondary={order.station}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton color=\"inherit\">\n                        <VisibilityIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useRouteMatch, Route, Switch } from 'react-router-dom';\nimport OrderDetail from './OrderDetail';\nimport OrderList from './OrderList';\n\nexport default function OrderRouter() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <OrderList />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetail />\n      </Route>\n    </Switch>\n  );\n}\n","// web fetch\n\nexport async function fetchOrders() {\n  const response = await fetch(\n    'https://tp-poc-api.herokuapp.com/api/orders',\n  );\n  return response.json();\n}\n\nexport async function fetchOrderById(id) {\n  const response = await fetch(\n    `https://tp-poc-api.herokuapp.com/api/orders/${id}`,\n  );\n  return response.json();\n}\n\nexport async function fetchTasksByOrderId(orderId) {\n  const response = await fetch(\n    `https://tp-poc-api.herokuapp.com/api/tasks/${orderId}`,\n  );\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchOrders, fetchTasksByOrderId } from '../../api/web';\nimport {\n  addOrder,\n  getSyncMetadata,\n  DEFAULT_SYNC_METADATA,\n  updateSyncMetadata,\n  cleanDatabases,\n  addTask,\n} from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  // const [downloadDisabled, setDownloadDisabled] = useState(false);\n  // const [uploadDisabled, setUploadDisabled] = useState(true);\n  // const [deleteDisabled, setDeleteDisabled] = useState(true);\n\n  // load sync metadata\n  const [syncMetadata, setSyncMetadata] = useState(\n    DEFAULT_SYNC_METADATA,\n  );\n\n  useEffect(() => {\n    async function fetchSyncMetadata() {\n      try {\n        const response = await getSyncMetadata();\n        setSyncMetadata(response);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchSyncMetadata();\n  }, []);\n\n  const [inProgress, setInProgress] = useState({\n    loading: false,\n    message: '',\n    err: false,\n  });\n\n  const onClickDownload = async (event) => {\n    setInProgress({\n      loading: true,\n      message: 'Loading work orders from server',\n    });\n\n    try {\n      // fetch data from web api\n      const orders = await fetchOrders();\n      if (orders.length > 0) {\n        setInProgress({\n          message: `Loading tasks for ${orders.length} work orders from server`,\n        });\n\n        setInProgress({\n          message: 'Saving work orders to local database',\n        });\n\n        const ordersSavedToDb = await Promise.all(\n          orders.map((order) => addOrder(order)),\n        );\n\n        setInProgress({\n          message: \"Saving work orders' tasks to local database\",\n        });\n\n        const orderIds = ordersSavedToDb.map((order) => order.id);\n\n        const tasks = await Promise.all(\n          orderIds.map((orderId) => fetchTasksByOrderId(orderId)),\n        );\n\n        await Promise.all(tasks.flat().map((task) => addTask(task)));\n\n        setInProgress({\n          message: 'Finishing to save to local database',\n        });\n\n        // save metadata in the database\n        const updatedMetadata = await updateSyncMetadata({\n          ...syncMetadata,\n          downloadDisabled: true,\n          uploadDisabled: false,\n          deleteDisabled: false,\n        });\n\n        // update sync metadata state\n        setSyncMetadata(updatedMetadata);\n\n        setInProgress({\n          loading: false,\n          message: `Loaded ${ordersSavedToDb.length} work orders successfuly`,\n        });\n      } else {\n        setInProgress({\n          loading: false,\n          message: 'There are no work orders to load from server',\n        });\n      }\n    } catch (err) {\n      console.error(err);\n\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error loading work orders from server. Please try again',\n      });\n    }\n  };\n\n  const onClickUpload = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Syncing work orders back to server',\n      });\n\n      setInProgress({\n        message: 'Finishing sync back to server',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: true,\n        uploadDisabled: true,\n        deleteDisabled: false,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Work orders synced back to server successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error syncing work orders back to server. Please try again',\n      });\n    }\n  };\n\n  const onClickDelete = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Cleaning local database',\n      });\n\n      // delete databases\n      await cleanDatabases();\n\n      setInProgress({\n        message: 'Finishing the cleaning of the local database',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: false,\n        uploadDisabled: true,\n        deleteDisabled: true,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Local database cleaned successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error cleaning the local database. Please try again',\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Home</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudDownloadIcon />}\n            onClick={onClickDownload}\n            disabled={syncMetadata.downloadDisabled}\n          >\n            Download\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudUploadIcon />}\n            onClick={onClickUpload}\n            disabled={syncMetadata.uploadDisabled}\n          >\n            Upload (Not Working)\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={syncMetadata.deleteDisabled}\n          >\n            Delete\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {inProgress.loading && <CircularProgress size={17} />}\n          {'  '}\n          {inProgress.message && <span>{inProgress.message}</span>}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Header from './components/header/Header';\nimport OrderIndex from './components/orders/OrderIndex';\nimport Home from './components/home/Home';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   padding: theme.spacing(2),\n    // },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/\">\n      <CssBaseline />\n      <Header />\n      <Container maxWidth=\"md\">\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/orders\">\n              <OrderIndex />\n            </Route>\n          </Switch>\n        </main>\n      </Container>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport AddToHomeScreen from 'a2hs.js';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register(serviceWorkerConfig);\n\n// add to home screen\nAddToHomeScreen({\n  brandName: 'My Work',\n});\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport HeaderDrawer from './HeaderDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const iOS =\n    process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open !== value) {\n      setOpen(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={open}\n          onOpen={toggleDrawer(true)}\n          onClose={toggleDrawer(false)}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          <HeaderDrawer />\n        </SwipeableDrawer>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Work App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: 180,\n  },\n}));\n\nexport default function HeaderDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"/orders\"\n          primary=\"Orders\"\n          icon={<AssignmentIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n"],"sourceRoot":""}