{"version":3,"sources":["api/db.js","components/orders/OrderDetail.js","api/hooks.js","components/orders/OrderList.js","components/orders/OrderRouter.js","api/web.js","components/home/Home.js","components/app/App.js","serviceWorker.js","index.js","components/app/Header.js","components/app/AppMenu.js"],"names":["dbs","ORDERS","DEFAULT_SYNC_METADATA","_id","downloadDisabled","downloadedAt","uploadDisabled","uploadedAt","deleteDisabled","deletedAt","getDB","dbname","PouchDB","getSyncMetadata","a","get","name","updateSyncMetadata","data","previous","doc","_rev","put","getOrders","allDocs","include_docs","result","rows","map","row","getOrderById","id","attachments","binary","addOrder","order","deleteAllOrders","destroy","ok","attachImageToOrder","file","type","putAttachment","useStyles","makeStyles","theme","root","inputFile","display","OrderDetail","classes","useState","undefined","setData","isLoading","setIsLoading","isError","setIsError","useEffect","response","fetchData","useGetOrderById","useParams","state","setState","_attachments","console","log","Object","keys","handleToggle","task","event","target","checked","tasks","item","done","onChangeImageUpload","element","document","getElementById","files","Typography","variant","Grid","container","spacing","xs","description","direction","justify","IconButton","color","component","Paper","elevation","List","subheader","ListSubheader","ListItem","key","ListItemText","primary","ListItemSecondaryAction","Switch","edge","onChange","accept","capture","className","htmlFor","GridList","cellHeight","cols","GridListTile","style","height","fileName","src","URL","createObjectURL","alt","OrderList","url","useRouteMatch","useGetOrders","length","button","Link","to","secondary","station","OrderRouter","path","exact","fetchOrders","fetch","json","fetchOrderById","marginRight","Home","syncMetadata","setSyncMetadata","fetchSyncMetadata","loading","message","err","inProgress","setInProgress","onClickDownload","orders","Promise","all","ordersWithTasks","savedToDb","updatedMetadata","error","onClickUpload","onClickDelete","Button","startIcon","onClick","disabled","CircularProgress","size","main","paddingTop","App","CssBaseline","Header","Container","maxWidth","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","process","href","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","flexGrow","menuButton","title","iOS","browser","test","userAgent","open","setOpen","toggleDrawer","value","position","anchor","onOpen","onClose","disableBackdropTransition","disableDiscovery","aria-label","ListItemLink","props","icon","renderLink","React","useMemo","forwardRef","itemProps","ref","width","AppMenu"],"mappings":"2YAEMA,EAAM,GAGNC,EAAS,SAEFC,EAAwB,CACnCC,IAAK,UACLC,kBAAkB,EAClBC,aAAc,GACdC,gBAAgB,EAChBC,WAAY,GACZC,gBAAgB,EAChBC,UAAW,IAGb,SAASC,IAAwB,IAAlBC,EAAiB,uDAARV,EAItB,OAHKD,EAAIW,KACPX,EAAIW,GAAU,IAAIC,IAAQD,IAErBX,EAAIW,GAON,SAAeE,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EAEUJ,EA1BK,iBA0BgBK,IAAI,WAFnC,4EAIC,MAAoB,cAAb,KAAIC,KAJZ,0CAKMd,GALN,0D,sBAUA,SAAee,EAAtB,kC,4CAAO,WAAkCC,GAAlC,iBAAAJ,EAAA,sEACkBD,IADlB,cACCM,EADD,OAECC,EACJD,GAAYA,EAASE,KAArB,eACSH,EADT,CACeG,KAAMF,EAASE,OAC1BH,EALD,SAQCR,EA1Cc,iBA0COY,IAAIF,GAR1B,uBAWQV,EA7CO,iBA6CcK,IAAI,WAXjC,oF,sBAkBA,SAAeQ,IAAtB,+B,4CAAO,4BAAAT,EAAA,sEACgBJ,EAAMT,GAAQuB,QAAQ,CAAEC,cAAc,IADtD,cACCC,EADD,yBAEEA,EAAOC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIT,QAF/B,4C,sBAKA,SAAeU,EAAtB,kC,4CAAO,WAA4BC,GAA5B,SAAAjB,EAAA,sEACQJ,EAAMT,GAAQc,IAAIgB,EAAI,CACjCC,aAAa,EACbC,QAAQ,IAHL,oF,sBAOA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAArB,EAAA,6DAGDqB,EAAMJ,KACRX,EAAG,eAAQe,EAAR,CAAehC,IAAKgC,EAAMJ,MAJ1B,SAOgBrB,EAAMT,GAAQqB,IAAIF,GAPlC,cAOCM,EAPD,yBASEI,EAAaJ,EAAOK,KATtB,4C,sBA4BA,SAAeK,IAAtB,+B,4CAAO,4BAAAtB,EAAA,sEAEgBJ,EAAMT,GAAQoC,UAF9B,cAECX,EAFD,QAGMY,KACTtC,EAAIC,GAAU,MAJX,kBAMEyB,GANF,4C,sBAaA,SAAea,EAAtB,oC,4CAAO,WAAkCR,EAAIS,GAAtC,uBAAA1B,EAAA,6DACGE,EAAewB,EAAfxB,KAAMyB,EAASD,EAATC,KADT,SAGkB/B,EAAMT,GAAQc,IAAIgB,GAHpC,uBAGGV,EAHH,EAGGA,KAHH,SAKgBX,EAAMT,GAAQyC,cACjCX,EACAf,EACAK,EACAmB,EACAC,GAVG,cAKCf,EALD,yBAaEI,EAAaJ,EAAOK,KAbtB,4C,sBCvFP,IAAMY,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNC,UAAW,CACTC,QAAS,YAIE,SAASC,KACtB,IAAMC,EAAUP,IADoB,ECsC/B,SAAyBZ,GAAK,IAAD,EACVoB,wBAASC,GADC,mBAC3BlC,EAD2B,KACrBmC,EADqB,OAEAF,oBAAS,GAFT,mBAE3BG,EAF2B,KAEhBC,EAFgB,OAGJJ,oBAAS,GAHL,mBAG3BK,EAH2B,KAGlBC,EAHkB,KAoBlC,OAfAC,qBAAU,WAAM,4CACd,4BAAA5C,EAAA,6DACEyC,GAAa,GACbE,GAAW,GAFb,kBAI2B3B,EAAaC,GAJxC,OAIU4B,EAJV,OAKIN,EAAQM,GALZ,gDAOIF,GAAW,GAPf,QASEF,GAAa,GATf,0DADc,uBAAC,WAAD,wBAYdK,KACC,IAEI,CAAE1C,OAAMoC,YAAWE,WDvDWK,CADxBC,cAAP/B,IACEb,EAH4B,EAG5BA,KAAMoC,EAHsB,EAGtBA,UAAWE,EAHW,EAGXA,QAHW,EAIVL,mBAASjC,GAJC,mBAI7B6C,EAJ6B,KAItBC,EAJsB,KAMpCN,qBAAU,WACJxC,GAAQA,EAAK+C,cACfC,QAAQC,IAAIC,OAAOC,KAAKnD,EAAK+C,eAE/BD,EAAS9C,KACR,CAACA,IAEJ,IAAMoD,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BN,QAAQC,IAAI,SAAUI,EAAKxC,GAAI,WAAYyC,EAAMC,OAAOC,SAExDV,EAAS,eACJD,EADG,CAENY,MAAOZ,EAAMY,MAAM/C,KAAI,SAACgD,GAAD,OACrBL,EAAKxC,KAAO6C,EAAK7C,GAAjB,eACS6C,EADT,CACeC,KAAML,EAAMC,OAAOC,UAC9BE,UAKJE,EAAmB,uCAAG,WAAON,GAAP,mBAAA1D,EAAA,2DACpBiE,EAAUC,SAASC,eAAe,qBAC5BC,QAASH,EAAQG,MAAM,GAFT,uBAGlB1C,EAAOuC,EAAQG,MAAM,GAHH,SAIH3C,EAAmBwB,EAAM5D,IAAKqC,GAJ3B,OAIlBd,EAJkB,OAKxBsC,EAAStC,GACTwC,QAAQC,IAAIzC,GANY,2CAAH,sDAUzB,OACE,6BACG8B,GAAW,yDACXF,GAAa,4CACZA,IAAcpC,GACd,kBAACiE,EAAA,EAAD,CAAYC,QAAQ,aAApB,mBAEDrB,GACC,kBAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACL,EAAA,EAAD,CAAYC,QAAQ,MAAMrB,EAAM0B,cAElC,kBAACJ,EAAA,EAAD,CACET,MAAI,EACJU,WAAS,EACTE,GAAI,GACJE,UAAU,MACVC,QAAQ,YAER,kBAACN,EAAA,EAAD,CAAMT,MAAI,GACR,kBAACgB,EAAA,EAAD,CAAYC,MAAM,UAAUC,UAAU,QACpC,kBAAC,IAAD,SAIN,kBAACT,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACO,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,EAAA,EAAD,CAAMC,UAAW,kBAACC,EAAA,EAAD,eACdpC,EAAMY,MAAM/C,KAAI,SAAC2C,GAAD,OACf,kBAAC6B,EAAA,EAAD,CAAUC,IAAK9B,EAAKxC,IAClB,kBAACuE,EAAA,EAAD,CAAcC,QAAShC,EAAKkB,cAC5B,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,MACLC,SAAUrC,EAAaC,GACvBG,QAASH,EAAKM,eAQ5B,kBAACQ,EAAA,EAAD,CACET,MAAI,EACJU,WAAS,EACTE,GAAI,GACJE,UAAU,MACVC,QAAQ,YAER,kBAACN,EAAA,EAAD,CAAMT,MAAI,GACR,2BACEnC,KAAK,OACLmE,OAAO,UACPC,SAAO,EACP9E,GAAG,mBACH+E,UAAW5D,EAAQH,UACnB4D,SAAU7B,IAEZ,2BAAOiC,QAAQ,oBACb,kBAACnB,EAAA,EAAD,CAAYC,MAAM,UAAUC,UAAU,QACpC,kBAAC,IAAD,UAKR,kBAACT,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACO,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACgB,EAAA,EAAD,CAAUC,WAAY,IAAKC,KAAM,GAC/B,kBAACC,EAAA,EAAD,CACEd,IAAI,YACJa,KAAM,EACNE,MAAO,CAAEC,OAAQ,SAEjB,kBAAClB,EAAA,EAAD,CAAeL,UAAU,OAAzB,aAID/B,EAAME,cACLG,OAAOC,KAAKN,EAAME,cAAcrC,KAAI,SAAC0F,GAAD,OAClC,kBAACH,EAAA,EAAD,CAAcd,IAAKiB,EAAUJ,KAAM,GACjC,yBACEK,IAAKC,IAAIC,gBACP1D,EAAME,aAAaqD,GAAUpG,MAE/BwG,IAAKJ,a,wBEvId,SAASK,KAAa,IAC3BC,EAAQC,cAARD,IAD0B,ED6B7B,WAAyB,IAAD,EACLzE,mBAAS,IADJ,mBACtBjC,EADsB,KAChBmC,EADgB,OAEKF,oBAAS,GAFd,mBAEtBG,EAFsB,KAEXC,EAFW,OAGCJ,oBAAS,GAHV,mBAGtBK,EAHsB,KAGbC,EAHa,KAoB7B,OAfAC,qBAAU,WAAM,4CACd,4BAAA5C,EAAA,6DACEyC,GAAa,GACbE,GAAW,GAFb,kBAI2BlC,IAJ3B,OAIUoC,EAJV,OAKIN,EAAQM,GALZ,gDAOIF,GAAW,GAPf,QASEF,GAAa,GATf,0DADc,uBAAC,WAAD,wBAYdK,KACC,IAEI,CAAE1C,OAAMoC,YAAWE,WC/CWsE,GAA7B5G,EAF0B,EAE1BA,KAAMoC,EAFoB,EAEpBA,UAAWE,EAFS,EAETA,QAEzB,OACE,6BACE,kBAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACL,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAEF,kBAACC,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACZhC,GAAW,yDACXF,GAAa,4CACZA,GAA6B,IAAhBpC,EAAK6G,QAClB,kBAAC5C,EAAA,EAAD,CAAYC,QAAQ,aAApB,wBAIDlE,EAAK6G,OAAS,GACb,kBAAChC,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,EAAA,EAAD,KACG/E,EAAKU,KAAI,SAACO,GAAD,OACR,kBAACiE,EAAA,EAAD,CACEC,IAAKlE,EAAMJ,GACXiG,QAAM,EACNlC,UAAWmC,IACXC,GAAE,UAAKN,EAAL,YAAYzF,EAAMJ,KAEpB,kBAACuE,EAAA,EAAD,CACEC,QAASpE,EAAMsD,YACf0C,UAAWhG,EAAMiG,UAEnB,kBAAC5B,EAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAYC,MAAM,WAChB,kBAAC,KAAD,iBC5CT,SAASwC,KAAe,IAC7BC,EAAST,cAATS,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAMA,GACjB,kBAACX,GAAD,OAEF,kBAAC,IAAD,CAAOW,KAAI,UAAKA,EAAL,SACT,kBAACrF,GAAD,Q,oFCZD,SAAeuF,KAAtB,gC,8CAAO,4BAAA1H,EAAA,sEACkB2H,MACrB,+CAFG,cACC9E,EADD,yBAIEA,EAAS+E,QAJX,4C,sBAOA,SAAeC,GAAtB,mC,8CAAO,WAA8B5G,GAA9B,eAAAjB,EAAA,sEACkB2H,MAAM,+CAAD,OACqB1G,IAF5C,cACC4B,EADD,yBAIEA,EAAS+E,QAJX,4C,sBCWP,IAAM/F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAGNkF,OAAQ,CACNY,YAAa/F,EAAM0C,QAAQ,QAIhB,SAASsD,KACtB,IAAM3F,EAAUP,KADa,EAOWQ,mBACtCjD,GAR2B,mBAOtB4I,EAPsB,KAORC,EAPQ,KAW7BrF,qBAAU,WAAM,4CACd,4BAAA5C,EAAA,+EAE2BD,IAF3B,OAEU8C,EAFV,OAGIoF,EAAgBpF,GAHpB,gDAKIO,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASd6E,KACC,IArB0B,MAuBO7F,mBAAS,CAC3C8F,SAAS,EACTC,QAAS,GACTC,KAAK,IA1BsB,mBAuBtBC,EAvBsB,KAuBVC,EAvBU,KA6BvBC,EAAe,uCAAG,WAAO9E,GAAP,qBAAA1D,EAAA,6DACtBuI,EAAc,CACZJ,SAAS,EACTC,QAAS,oCAHW,kBAQCV,KARD,aAQde,EARc,QASTxB,OAAS,GATA,wBAUlBsB,EAAc,CACZH,QAAQ,qBAAD,OAAuBK,EAAOxB,OAA9B,8BAXS,SAcYyB,QAAQC,IACpCF,EAAO3H,KAAI,SAACO,GAAD,OAAWwG,GAAexG,EAAMJ,QAf3B,cAcZ2H,EAdY,OAkBlBL,EAAc,CACZH,QAAS,yCAnBO,UAsBMM,QAAQC,IAC9BC,EAAgB9H,KAAI,SAACO,GAAD,OAAWD,EAASC,OAvBxB,eAsBZwH,EAtBY,OA0BlBzF,QAAQC,IAAIwF,GAEZN,EAAc,CACZH,QAAS,wCA7BO,UAiCYjI,EAAmB,eAC5C6H,EAD2C,CAE9C1I,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KArCA,QAiCZoJ,EAjCY,OAyClBb,EAAgBa,GAEhBP,EAAc,CACZJ,SAAS,EACTC,QAAQ,UAAD,OAAYQ,EAAgB3B,OAA5B,wCA7CS,wBAgDlBsB,EAAc,CACZJ,SAAS,EACTC,QAAS,iDAlDO,0DAsDpBhF,QAAQ2F,MAAR,MAEAR,EAAc,CACZJ,SAAS,EACTY,OAAO,EACPX,QACE,4DA5DgB,0DAAH,sDAiEfY,EAAa,uCAAG,WAAOtF,GAAP,eAAA1D,EAAA,sEAElBuI,EAAc,CACZJ,SAAS,EACTC,QAAS,uCAGXG,EAAc,CACZH,QAAS,kCARO,SAYYjI,EAAmB,eAC5C6H,EAD2C,CAE9C1I,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KAhBA,OAYZoJ,EAZY,OAoBlBb,EAAgBa,GAEhBP,EAAc,CACZJ,SAAS,EACTC,QAAS,kDAxBO,kDA2BlBG,EAAc,CACZJ,SAAS,EACTY,OAAO,EACPX,QACE,+DA/Bc,0DAAH,sDAoCba,EAAa,uCAAG,WAAOvF,GAAP,eAAA1D,EAAA,sEAElBuI,EAAc,CACZJ,SAAS,EACTC,QAAS,4BAJO,SAQZ9G,IARY,cAUlBiH,EAAc,CACZH,QAAS,iDAXO,SAeYjI,EAAmB,eAC5C6H,EAD2C,CAE9C1I,kBAAkB,EAClBE,gBAAgB,EAChBE,gBAAgB,KAnBA,OAeZoJ,EAfY,OAuBlBb,EAAgBa,GAEhBP,EAAc,CACZJ,SAAS,EACTC,QAAS,uCA3BO,kDA8BlBG,EAAc,CACZJ,SAAS,EACTY,OAAO,EACPX,QACE,wDAlCc,0DAAH,sDAuCnB,OACE,yBAAKpC,UAAW5D,EAAQJ,MACtB,kBAACuC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACL,EAAA,EAAD,CAAYC,QAAQ,MAApB,SAEF,kBAACC,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACwE,GAAA,EAAD,CACE5E,QAAQ,YACRS,MAAM,UACNiB,UAAW5D,EAAQ8E,OACnBiC,UAAW,kBAAC,KAAD,MACXC,QAASZ,EACTa,SAAUrB,EAAa1I,kBANzB,aAWF,kBAACiF,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACwE,GAAA,EAAD,CACE5E,QAAQ,YACRS,MAAM,UACNiB,UAAW5D,EAAQ8E,OACnBiC,UAAW,kBAAC,KAAD,MACXC,QAASJ,EACTK,SAAUrB,EAAaxI,gBANzB,WAWF,kBAAC+E,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACb,kBAACwE,GAAA,EAAD,CACE5E,QAAQ,YACRS,MAAM,UACNiB,UAAW5D,EAAQ8E,OACnBiC,UAAW,kBAAC,KAAD,MACXC,QAASH,EACTI,SAAUrB,EAAatI,gBANzB,WAWF,kBAAC6E,EAAA,EAAD,CAAMT,MAAI,EAACY,GAAI,IACZ4D,EAAWH,SAAW,kBAACmB,GAAA,EAAD,CAAkBC,KAAM,KAC9C,KACAjB,EAAWF,SAAW,8BAAOE,EAAWF,YCtOnD,IAAMvG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyH,KAAM,CACJC,WAAY1H,EAAM0C,QAAQ,QAOf,SAASiF,KACtB,IAAMtH,EAAUP,KAEhB,OACE,kBAAC,IAAD,KACE,kBAAC8H,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,0BAAM9D,UAAW5D,EAAQoH,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/B,OAAK,EAACD,KAAK,KAChB,kBAACO,GAAD,OAEF,kBAAC,IAAD,CAAOP,KAAK,WACV,kBAACD,GAAD,WCxBd,IAAMwC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA4CN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7H,QACfuH,UAAUC,cAAcQ,YAI1B7H,QAAQC,IACN,iHAKEkH,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBxH,QAAQC,IAAI,sCAGRkH,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAACrC,GACN3F,QAAQ2F,MACN,4CACAA,MClGRsC,IAASC,OAEP,kBAAC5B,GAAD,MAEAxF,SAASC,eAAe,SDYnB,SAAkBoG,GACvB,GAEE,kBAAmBC,UACnB,CAMA,GAJkB,IAAI9D,IACpB6E,GACAtB,OAAOC,SAASsB,MAEJC,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,GAAN,UAEPxB,KAmEV,SAAiCO,EAAOC,GAEtC5C,MAAM2C,EAAO,CACXqB,QAAS,CAAE,iBAAkB,YAE5BhB,MAAK,SAAC9H,GAEL,IAAM+I,EAAc/I,EAAS8I,QAAQ1L,IAAI,gBAEnB,MAApB4C,EAASgJ,QACO,MAAfD,IACwC,IAAvCA,EAAYE,QAAQ,cAGtBtB,UAAUC,cAAcsB,MAAMpB,MAAK,SAACC,GAClCA,EAAaoB,aAAarB,MAAK,WAC7BV,OAAOC,SAAS+B,eAKpB5B,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLhI,QAAQC,IACN,oEA3FA6I,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMpB,MAAK,WACjCvH,QAAQC,IACN,iHAMJgH,GAAgBC,EAAOC,OCxC/BE,I,wLCNM5I,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmK,SAAU,GAEZC,WAAY,CACVtE,YAAa/F,EAAM0C,QAAQ,IAE7B4H,MAAO,CACLF,SAAU,OAIC,SAASvC,IACtB,IAAMxH,EAAUP,IACVyK,EAAMf,EAAQgB,SAAW,mBAAmBC,KAAKhC,UAAUiC,WAFlC,EAGPpK,oBAAS,GAHF,mBAGxBqK,EAHwB,KAGlBC,EAHkB,KAKzBC,EAAe,SAACC,GAAD,OAAW,SAACnJ,KAE7BA,GACe,YAAfA,EAAM/B,MACS,QAAd+B,EAAM6B,KAA+B,UAAd7B,EAAM6B,MAK5BmH,IAASG,GACXF,EAAQE,KAIZ,OACE,yBAAK7G,UAAW5D,EAAQJ,MACtB,kBAAC,IAAD,CAAQ8K,SAAS,UACf,kBAAC,IAAD,CACEC,OAAO,OACPL,KAAMA,EACNM,OAAQJ,GAAa,GACrBK,QAASL,GAAa,GACtBM,2BAA4BZ,EAC5Ba,iBAAkBb,GAElB,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1G,KAAK,QACLI,UAAW5D,EAAQgK,WACnBrH,MAAM,UACNqI,aAAW,OACXhE,QAASwD,GAAa,IAEtB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYtI,QAAQ,KAAK0B,UAAW5D,EAAQiK,OAA5C,qB,kDChEV,4IAaA,SAASgB,EAAaC,GAAQ,IACpBC,EAAsBD,EAAtBC,KAAM9H,EAAgB6H,EAAhB7H,QAAS2B,EAAOkG,EAAPlG,GAEjBoG,EAAaC,IAAMC,SACvB,kBACED,IAAME,YAAW,SAACC,EAAWC,GAAZ,OACf,kBAAC,IAAD,eAAMzG,GAAIA,EAAIyG,IAAKA,GAASD,SAEhC,CAACxG,IAGH,OACE,4BACE,kBAAC,IAAD,CAAUF,QAAM,EAAClC,UAAWwI,GACzBD,EAAO,kBAAC,IAAD,KAAeA,GAAuB,KAC9C,kBAAC,IAAD,CAAc9H,QAASA,MAY/B,IAAM5D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmK,SAAU,EACV2B,MAAO,SAII,SAASC,IACtB,IAAM3L,EAAUP,IAEhB,OACE,yBAAKmE,UAAW5D,EAAQJ,MACtB,kBAAC,IAAD,KACE,kBAACqL,EAAD,CAAcjG,GAAG,IAAI3B,QAAQ,OAAO8H,KAAM,kBAAC,IAAD,QAC1C,kBAACF,EAAD,CACEjG,GAAG,UACH3B,QAAQ,SACR8H,KAAM,kBAAC,IAAD,Y","file":"static/js/main.271d64fa.chunk.js","sourcesContent":["import PouchDB from 'pouchdb';\n\nconst dbs = {};\n\nconst SYNC_METADATA = 'sync-metadata';\nconst ORDERS = 'orders';\n\nexport const DEFAULT_SYNC_METADATA = {\n  _id: 'default',\n  downloadDisabled: false,\n  downloadedAt: '',\n  uploadDisabled: true,\n  uploadedAt: '',\n  deleteDisabled: true,\n  deletedAt: '',\n};\n\nfunction getDB(dbname = ORDERS) {\n  if (!dbs[dbname]) {\n    dbs[dbname] = new PouchDB(dbname);\n  }\n  return dbs[dbname];\n}\n\n// ####################################\n// SYNC METADATA\n// ####################################\n\nexport async function getSyncMetadata() {\n  try {\n    return await getDB(SYNC_METADATA).get('default');\n  } catch (err) {\n    if (err && err.name === 'not_found') {\n      return DEFAULT_SYNC_METADATA;\n    }\n  }\n}\n\nexport async function updateSyncMetadata(data) {\n  const previous = await getSyncMetadata();\n  const doc =\n    previous && previous._rev\n      ? { ...data, _rev: previous._rev }\n      : data;\n\n  // update\n  await getDB(SYNC_METADATA).put(doc);\n\n  // return updated version\n  return await getDB(SYNC_METADATA).get('default');\n}\n\n// ####################################\n// ORDERS\n// ####################################\n\nexport async function getOrders() {\n  const result = await getDB(ORDERS).allDocs({ include_docs: true });\n  return result.rows.map((row) => row.doc);\n}\n\nexport async function getOrderById(id) {\n  return await getDB(ORDERS).get(id, {\n    attachments: true,\n    binary: true,\n  });\n}\n\nexport async function addOrder(order) {\n  let doc;\n  // pouch ex[ect a _id field\n  if (order.id) {\n    doc = { ...order, _id: order.id };\n  }\n  // save\n  const result = await getDB(ORDERS).put(doc);\n  // return the most recebt version\n  return getOrderById(result.id);\n}\n\nexport async function updateOrder(order) {\n  // load the latest rev\n  const { _rev } = await getDB(ORDERS).get(order._id);\n  // update\n  const result = await getDB(ORDERS).put({ ...order, _rev });\n  // return the most recent version\n  return getOrderById(result.id);\n}\n\nexport async function deleteOrder(order) {\n  // load latest rev\n  const doc = await getDB(ORDERS).get(order._id);\n  // remove\n  return getDB(ORDERS).remove(doc);\n}\n\nexport async function deleteAllOrders() {\n  // delete the store\n  const result = await getDB(ORDERS).destroy();\n  if (result.ok) {\n    dbs[ORDERS] = null;\n  }\n  return result;\n}\n\n// ####################################\n// PICTURES\n// ####################################\n\nexport async function attachImageToOrder(id, file) {\n  const { name, type } = file;\n  // load the latest rev\n  const { _rev } = await getDB(ORDERS).get(id);\n  // attache the file\n  const result = await getDB(ORDERS).putAttachment(\n    id,\n    name,\n    _rev,\n    file,\n    type,\n  );\n  // return the most recent version\n  return getOrderById(result.id);\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  makeStyles,\n  GridList,\n  GridListTile,\n} from '@material-ui/core';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport { useParams } from 'react-router-dom';\nimport { useGetOrderById } from '../../api/hooks';\nimport { attachImageToOrder } from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inputFile: {\n    display: 'none',\n  },\n}));\n\nexport default function OrderDetail() {\n  const classes = useStyles();\n  let { id } = useParams();\n  const { data, isLoading, isError } = useGetOrderById(id);\n  const [state, setState] = useState(data);\n\n  useEffect(() => {\n    if (data && data._attachments) {\n      console.log(Object.keys(data._attachments));\n    }\n    setState(data);\n  }, [data]);\n\n  const handleToggle = (task) => (event) => {\n    console.log('Task: ', task.id, ', done: ', event.target.checked);\n\n    setState({\n      ...state,\n      tasks: state.tasks.map((item) =>\n        task.id === item.id\n          ? { ...item, done: event.target.checked }\n          : item,\n      ),\n    });\n  };\n\n  const onChangeImageUpload = async (event) => {\n    const element = document.getElementById('icon-button-file');\n    if (element.files && element.files[0]) {\n      const file = element.files[0];\n      const result = await attachImageToOrder(state._id, file);\n      setState(result);\n      console.log(result);\n    }\n  };\n\n  return (\n    <div>\n      {isError && <div>Something went wrong ...</div>}\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && !data && (\n        <Typography variant=\"subtitle1\">Order not found</Typography>\n      )}\n      {state && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{state.description}</Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              <IconButton color=\"primary\" component=\"span\">\n                <PlaylistAddIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={1}>\n              <List subheader={<ListSubheader>Tasks</ListSubheader>}>\n                {state.tasks.map((task) => (\n                  <ListItem key={task.id}>\n                    <ListItemText primary={task.description} />\n                    <ListItemSecondaryAction>\n                      <Switch\n                        edge=\"end\"\n                        onChange={handleToggle(task)}\n                        checked={task.done}\n                      />\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                capture\n                id=\"icon-button-file\"\n                className={classes.inputFile}\n                onChange={onChangeImageUpload}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton color=\"primary\" component=\"span\">\n                  <AddAPhotoIcon />\n                </IconButton>\n              </label>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={1}>\n              <GridList cellHeight={180} cols={3}>\n                <GridListTile\n                  key=\"Subheader\"\n                  cols={3}\n                  style={{ height: 'auto' }}\n                >\n                  <ListSubheader component=\"div\">\n                    Pictures\n                  </ListSubheader>\n                </GridListTile>\n                {state._attachments &&\n                  Object.keys(state._attachments).map((fileName) => (\n                    <GridListTile key={fileName} cols={1}>\n                      <img\n                        src={URL.createObjectURL(\n                          state._attachments[fileName].data,\n                        )}\n                        alt={fileName}\n                      />\n                    </GridListTile>\n                  ))}\n              </GridList>\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getOrders, getOrderById } from './db';\n\n// web\n\nconst useGetDataWebApi = (url, initialData) => {\n  const [data, setData] = useState(initialData);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const response = await fetch(url);\n        setData(await response.json());\n      } catch (err) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { data, isLoading, isError };\n};\n\nexport function useGetOrdersWeb() {\n  return useGetDataWebApi(\n    'https://tp-poc-api.herokuapp.com/api/orders',\n    [],\n  );\n}\n\nexport function useGetOrderByIdWeb(id) {\n  return useGetDataWebApi(\n    `https://tp-poc-api.herokuapp.com/api/orders/${id}`,\n    undefined,\n  );\n}\n\n// pouchdb\n\nexport function useGetOrders() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const response = await getOrders();\n        setData(response);\n      } catch (err) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { data, isLoading, isError };\n}\n\nexport function useGetOrderById(id) {\n  const [data, setData] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const response = await getOrderById(id);\n        setData(response);\n      } catch (err) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { data, isLoading, isError };\n}\n","import React from 'react';\nimport {\n  Typography,\n  IconButton,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useGetOrders } from '../../api/hooks';\n\nexport default function OrderList() {\n  const { url } = useRouteMatch();\n  const { data, isLoading, isError } = useGetOrders();\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Work Orders</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading && <div>Loading...</div>}\n          {!isLoading && data.length === 0 && (\n            <Typography variant=\"subtitle1\">\n              No orders to display\n            </Typography>\n          )}\n          {data.length > 0 && (\n            <Paper elevation={1}>\n              <List>\n                {data.map((order) => (\n                  <ListItem\n                    key={order.id}\n                    button\n                    component={Link}\n                    to={`${url}/${order.id}`}\n                  >\n                    <ListItemText\n                      primary={order.description}\n                      secondary={order.station}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton color=\"inherit\">\n                        <VisibilityIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRouteMatch, Route, Switch } from \"react-router-dom\";\nimport OrderDetail from \"./OrderDetail\";\nimport OrderList from \"./OrderList\";\n\nexport default function OrderRouter() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <OrderList />\n      </Route>\n      <Route path={`${path}/:id`}>\n        <OrderDetail />\n      </Route>\n    </Switch>\n  );\n}\n","// web fetch\n\nexport async function fetchOrders() {\n  const response = await fetch(\n    'https://tp-poc-api.herokuapp.com/api/orders',\n  );\n  return response.json();\n}\n\nexport async function fetchOrderById(id) {\n  const response = await fetch(\n    `https://tp-poc-api.herokuapp.com/api/orders/${id}`,\n  );\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchOrders, fetchOrderById } from '../../api/web';\nimport {\n  addOrder,\n  getSyncMetadata,\n  DEFAULT_SYNC_METADATA,\n  updateSyncMetadata,\n  deleteAllOrders,\n} from '../../api/db';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  // const [downloadDisabled, setDownloadDisabled] = useState(false);\n  // const [uploadDisabled, setUploadDisabled] = useState(true);\n  // const [deleteDisabled, setDeleteDisabled] = useState(true);\n\n  // load sync metadata\n  const [syncMetadata, setSyncMetadata] = useState(\n    DEFAULT_SYNC_METADATA,\n  );\n\n  useEffect(() => {\n    async function fetchSyncMetadata() {\n      try {\n        const response = await getSyncMetadata();\n        setSyncMetadata(response);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchSyncMetadata();\n  }, []);\n\n  const [inProgress, setInProgress] = useState({\n    loading: false,\n    message: '',\n    err: false,\n  });\n\n  const onClickDownload = async (event) => {\n    setInProgress({\n      loading: true,\n      message: 'Loading work orders from server',\n    });\n\n    try {\n      // fetch data from web api\n      const orders = await fetchOrders();\n      if (orders.length > 0) {\n        setInProgress({\n          message: `Loading tasks for ${orders.length} work orders from server`,\n        });\n\n        const ordersWithTasks = await Promise.all(\n          orders.map((order) => fetchOrderById(order.id)),\n        );\n\n        setInProgress({\n          message: 'Saving work orders to local database',\n        });\n\n        const savedToDb = await Promise.all(\n          ordersWithTasks.map((order) => addOrder(order)),\n        );\n\n        console.log(savedToDb);\n\n        setInProgress({\n          message: 'Finishing to save to local database',\n        });\n\n        // save metadata in the database\n        const updatedMetadata = await updateSyncMetadata({\n          ...syncMetadata,\n          downloadDisabled: true,\n          uploadDisabled: false,\n          deleteDisabled: false,\n        });\n\n        // update sync metadata state\n        setSyncMetadata(updatedMetadata);\n\n        setInProgress({\n          loading: false,\n          message: `Loaded ${ordersWithTasks.length} work orders and tasks successfuly`,\n        });\n      } else {\n        setInProgress({\n          loading: false,\n          message: 'There are no work orders to load from server',\n        });\n      }\n    } catch (err) {\n      console.error(err);\n\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error loading work orders from server. Please try again',\n      });\n    }\n  };\n\n  const onClickUpload = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Syncing work orders back to server',\n      });\n\n      setInProgress({\n        message: 'Finishing sync back to server',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: true,\n        uploadDisabled: true,\n        deleteDisabled: false,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Work orders synced back to server successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error syncing work orders back to server. Please try again',\n      });\n    }\n  };\n\n  const onClickDelete = async (event) => {\n    try {\n      setInProgress({\n        loading: true,\n        message: 'Cleaning local database',\n      });\n\n      // delete database\n      await deleteAllOrders();\n\n      setInProgress({\n        message: 'Finishing the cleaning of the local database',\n      });\n\n      // save metadata in the database\n      const updatedMetadata = await updateSyncMetadata({\n        ...syncMetadata,\n        downloadDisabled: false,\n        uploadDisabled: true,\n        deleteDisabled: true,\n      });\n\n      // update sync metadata state\n      setSyncMetadata(updatedMetadata);\n\n      setInProgress({\n        loading: false,\n        message: 'Local database cleaned successfuly',\n      });\n    } catch (err) {\n      setInProgress({\n        loading: false,\n        error: true,\n        message:\n          'Error cleaning the local database. Please try again',\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Home</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudDownloadIcon />}\n            onClick={onClickDownload}\n            disabled={syncMetadata.downloadDisabled}\n          >\n            Download\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<CloudUploadIcon />}\n            onClick={onClickUpload}\n            disabled={syncMetadata.uploadDisabled}\n          >\n            Upload\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.button}\n            startIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={syncMetadata.deleteDisabled}\n          >\n            Delete\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {inProgress.loading && <CircularProgress size={17} />}\n          {'  '}\n          {inProgress.message && <span>{inProgress.message}</span>}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport OrderRouter from '../orders/OrderRouter';\nimport Home from '../home/Home';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   padding: theme.spacing(2),\n    // },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <CssBaseline />\n      <Header />\n      <Container maxWidth=\"md\">\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/orders\">\n              <OrderRouter />\n            </Route>\n          </Switch>\n        </main>\n      </Container>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport AppMenu from \"./AppMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    if (open !== value) {\n      setOpen(value);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={open}\n          onOpen={toggleDrawer(true)}\n          onClose={toggleDrawer(false)}\n          disableBackdropTransition={!iOS}\n          disableDiscovery={iOS}\n        >\n          <AppMenu />\n        </SwipeableDrawer>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Work App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <Link to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: 180,\n  },\n}));\n\nexport default function AppMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"/orders\"\n          primary=\"Orders\"\n          icon={<AssignmentIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n"],"sourceRoot":""}